var e = require("@urql/core");

var t = require("react");

var r = require("wonka");

var n = e.createClient({
  url: "/graphql"
});

var u = t.createContext(n);

var i = u.Provider;

var a = u.Consumer;

u.displayName = "UrqlContext";

var s = !1;

function useClient() {
  var e = t.useContext(u);
  if ("production" !== process.env.NODE_ENV && e === n && !s) {
    s = !0;
    console.warn("Default Client: No client has been specified using urql's Provider.This means that urql will be falling back to defaults including making requests to `/graphql`.\nIf that's not what you want, please create a client and add a Provider.");
  }
  return e;
}

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var r = arguments[t];
      for (var n in r) {
        if (Object.prototype.hasOwnProperty.call(r, n)) {
          e[n] = r[n];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

var o = {
  fetching: !1,
  stale: !1,
  error: void 0,
  data: void 0,
  extensions: void 0,
  operation: void 0
};

function computeNextState(e, t) {
  var r = _extends({}, e, t, {
    fetching: !!t.fetching,
    stale: !!t.stale
  });
  return function isShallowDifferent(e, t) {
    if ("object" != typeof e || "object" != typeof t) {
      return e !== t;
    }
    for (var r in e) {
      if (!(r in t)) {
        return !0;
      }
    }
    for (var n in t) {
      if (e[n] !== t[n]) {
        return !0;
      }
    }
    return !1;
  }(e, r) ? r : e;
}

function hasDepsChanged(e, t) {
  for (var r = 0, n = t.length; r < n; r++) {
    if (e[r] !== t[r]) {
      return !0;
    }
  }
  return !1;
}

function useMutation(n) {
  var u = t.useRef(!0);
  var i = useClient();
  var a = t.useState(o);
  var s = a[0];
  var c = a[1];
  var f = t.useCallback((function(t, a) {
    c(_extends({}, o, {
      fetching: !0
    }));
    return r.toPromise(i.executeMutation(e.createRequest(n, t), a || {})).then((function(e) {
      if (u.current) {
        c({
          fetching: !1,
          stale: !!e.stale,
          data: e.data,
          error: e.error,
          extensions: e.extensions,
          operation: e.operation
        });
      }
      return e;
    }));
  }), [ i, n, c ]);
  t.useEffect((function() {
    return function() {
      u.current = !1;
    };
  }), []);
  return [ s, f ];
}

function useRequest(r, n) {
  var u = t.useRef(void 0);
  return t.useMemo((function() {
    var t = e.createRequest(r, n);
    if (void 0 !== u.current && u.current.key === t.key) {
      return u.current;
    } else {
      u.current = t;
      return t;
    }
  }), [ r, n ]);
}

var c = !1;

function useQuery(e) {
  var n = useClient();
  var u = function getCacheForClient(e) {
    if (!e._react) {
      var t = new Set;
      var n = new Map;
      if (e.operations$) {
        r.subscribe((function(e) {
          if ("teardown" === e.kind && t.has(e.key)) {
            t.delete(e.key);
            n.delete(e.key);
          }
        }))(e.operations$);
      }
      e._react = {
        get: function get(e) {
          return n.get(e);
        },
        set: function set(e, r) {
          t.delete(e);
          n.set(e, r);
        },
        dispose: function dispose(e) {
          t.add(e);
        }
      };
    }
    return e._react;
  }(n);
  var i = function isSuspense(e, t) {
    return e.suspense && (!t || !1 !== t.suspense);
  }(n, e.context);
  var a = useRequest(e.query, e.variables);
  var s = t.useMemo((function() {
    if (e.pause) {
      return null;
    }
    var t = n.executeQuery(a, _extends({}, {
      requestPolicy: e.requestPolicy
    }, e.context));
    return i ? r.onPush((function(e) {
      u.set(a.key, e);
    }))(t) : t;
  }), [ u, n, a, i, e.pause, e.requestPolicy, e.context ]);
  var f = t.useCallback((function(e, t) {
    if (!e) {
      return {
        fetching: !1
      };
    }
    var n = u.get(a.key);
    if (!n) {
      var i;
      var s = r.subscribe((function(e) {
        n = e;
        if (i) {
          i(n);
        }
      }))(r.takeWhile((function() {
        return t && !i || !n;
      }))(e));
      if (null == n && t) {
        var o = new Promise((function(e) {
          i = e;
        }));
        u.set(a.key, o);
        throw o;
      } else {
        s.unsubscribe();
      }
    } else if (t && null != n && "then" in n) {
      throw n;
    }
    return n || {
      fetching: !0
    };
  }), [ u, a ]);
  var l = [ n, a, e.requestPolicy, e.context, e.pause ];
  var v = t.useState((function() {
    c = !0;
    try {
      return [ s, computeNextState(o, f(s, i)), l ];
    } finally {
      c = !1;
    }
  }));
  var p = v[0];
  var d = v[1];
  var x = p[1];
  if (s !== p[0] && hasDepsChanged(p[2], l)) {
    d([ s, x = computeNextState(p[1], f(s, i)), l ]);
  }
  t.useEffect((function() {
    var e = p[0];
    var t = p[2][1];
    var n = !1;
    function updateResult(e) {
      n = !0;
      if (!c) {
        d((function(t) {
          var r = computeNextState(t[1], e);
          return t[1] !== r ? [ t[0], r, t[2] ] : t;
        }));
      }
    }
    if (e) {
      var i = r.subscribe(updateResult)(r.onEnd((function() {
        updateResult({
          fetching: !1
        });
      }))(e));
      if (!n) {
        updateResult({
          fetching: !0
        });
      }
      return function() {
        u.dispose(t.key);
        i.unsubscribe();
      };
    } else {
      updateResult({
        fetching: !1
      });
    }
  }), [ u, p[0], p[2][1] ]);
  return [ x, t.useCallback((function(t) {
    var s = _extends({}, {
      requestPolicy: e.requestPolicy
    }, e.context, t);
    d((function(e) {
      return [ i ? r.onPush((function(e) {
        u.set(a.key, e);
      }))(n.executeQuery(a, s)) : n.executeQuery(a, s), e[1], l ];
    }));
  }), [ n, u, a, i, f, e.requestPolicy, e.context ]) ];
}

function useSubscription(e, n) {
  var u = useClient();
  var i = useRequest(e.query, e.variables);
  var a = t.useRef(n);
  a.current = n;
  var s = t.useMemo((function() {
    return !e.pause ? u.executeSubscription(i, e.context) : null;
  }), [ u, i, e.pause, e.context ]);
  var c = [ u, i, e.context, e.pause ];
  var f = t.useState((function() {
    return [ s, _extends({}, o, {
      fetching: !!s
    }), c ];
  }));
  var l = f[0];
  var v = f[1];
  var p = l[1];
  if (s !== l[0] && hasDepsChanged(l[2], c)) {
    v([ s, p = computeNextState(l[1], {
      fetching: !!s
    }), c ]);
  }
  t.useEffect((function() {
    function updateResult(e) {
      v((function(t) {
        var r = computeNextState(t[1], e);
        if (t[1] === r) {
          return t;
        }
        if (a.current && t[1].data !== r.data) {
          r.data = a.current(t[1].data, r.data);
        }
        return [ t[0], r, t[2] ];
      }));
    }
    if (l[0]) {
      return r.subscribe(updateResult)(r.onEnd((function() {
        updateResult({
          fetching: !1
        });
      }))(l[0])).unsubscribe;
    } else {
      updateResult({
        fetching: !1
      });
    }
  }), [ l[0] ]);
  return [ p, t.useCallback((function(t) {
    var r = u.executeSubscription(i, _extends({}, e.context, t));
    v((function(e) {
      return [ r, e[1], e[2] ];
    }));
  }), [ u, e.context, i ]) ];
}

exports.Consumer = a;

exports.Context = u;

exports.Mutation = function Mutation(e) {
  var t = useMutation(e.query);
  return e.children(_extends({}, t[0], {
    executeMutation: t[1]
  }));
};

exports.Provider = i;

exports.Query = function Query(e) {
  var t = useQuery(e);
  return e.children(_extends({}, t[0], {
    executeQuery: t[1]
  }));
};

exports.Subscription = function Subscription(e) {
  var t = useSubscription(e, e.handler);
  return e.children(_extends({}, t[0], {
    executeSubscription: t[1]
  }));
};

exports.useClient = useClient;

exports.useMutation = useMutation;

exports.useQuery = useQuery;

exports.useSubscription = useSubscription;

Object.keys(e).forEach((function(t) {
  if ("default" !== t && !exports.hasOwnProperty(t)) {
    exports[t] = e[t];
  }
}));
//# sourceMappingURL=urql.js.map
