import { createClient as e, createRequest as t } from "@urql/core";

export * from "@urql/core";

import { createContext as n, useContext as r, useRef as u, useState as i, useCallback as a, useEffect as o, useMemo as c } from "react";

import { toPromise as s, subscribe as f, onPush as l, takeWhile as v, onEnd as p } from "wonka";

var d = e({
  url: "/graphql"
});

var x = n(d);

var h = x.Provider;

var y = x.Consumer;

x.displayName = "UrqlContext";

var g = !1;

function useClient() {
  var e = r(x);
  if ("production" !== process.env.NODE_ENV && e === d && !g) {
    g = !0;
    console.warn("Default Client: No client has been specified using urql's Provider.This means that urql will be falling back to defaults including making requests to `/graphql`.\nIf that's not what you want, please create a client and add a Provider.");
  }
  return e;
}

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) {
        if (Object.prototype.hasOwnProperty.call(n, r)) {
          e[r] = n[r];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

var b = {
  fetching: !1,
  stale: !1,
  error: void 0,
  data: void 0,
  extensions: void 0,
  operation: void 0
};

function computeNextState(e, t) {
  var n = _extends({}, e, t, {
    fetching: !!t.fetching,
    stale: !!t.stale
  });
  return function isShallowDifferent(e, t) {
    if ("object" != typeof e || "object" != typeof t) {
      return e !== t;
    }
    for (var n in e) {
      if (!(n in t)) {
        return !0;
      }
    }
    for (var r in t) {
      if (e[r] !== t[r]) {
        return !0;
      }
    }
    return !1;
  }(e, n) ? n : e;
}

function hasDepsChanged(e, t) {
  for (var n = 0, r = t.length; n < r; n++) {
    if (e[n] !== t[n]) {
      return !0;
    }
  }
  return !1;
}

function useMutation(e) {
  var n = u(!0);
  var r = useClient();
  var c = i(b);
  var f = c[0];
  var l = c[1];
  var v = a((function(u, i) {
    l(_extends({}, b, {
      fetching: !0
    }));
    return s(r.executeMutation(t(e, u), i || {})).then((function(e) {
      if (n.current) {
        l({
          fetching: !1,
          stale: !!e.stale,
          data: e.data,
          error: e.error,
          extensions: e.extensions,
          operation: e.operation
        });
      }
      return e;
    }));
  }), [ r, e, l ]);
  o((function() {
    return function() {
      n.current = !1;
    };
  }), []);
  return [ f, v ];
}

function useRequest(e, n) {
  var r = u(void 0);
  return c((function() {
    var u = t(e, n);
    if (void 0 !== r.current && r.current.key === u.key) {
      return r.current;
    } else {
      r.current = u;
      return u;
    }
  }), [ e, n ]);
}

var q = !1;

function useQuery(e) {
  var t = useClient();
  var n = function getCacheForClient(e) {
    if (!e._react) {
      var t = new Set;
      var n = new Map;
      if (e.operations$) {
        f((function(e) {
          if ("teardown" === e.kind && t.has(e.key)) {
            t.delete(e.key);
            n.delete(e.key);
          }
        }))(e.operations$);
      }
      e._react = {
        get: function get(e) {
          return n.get(e);
        },
        set: function set(e, r) {
          t.delete(e);
          n.set(e, r);
        },
        dispose: function dispose(e) {
          t.add(e);
        }
      };
    }
    return e._react;
  }(t);
  var r = function isSuspense(e, t) {
    return e.suspense && (!t || !1 !== t.suspense);
  }(t, e.context);
  var u = useRequest(e.query, e.variables);
  var s = c((function() {
    if (e.pause) {
      return null;
    }
    var i = t.executeQuery(u, _extends({}, {
      requestPolicy: e.requestPolicy
    }, e.context));
    return r ? l((function(e) {
      n.set(u.key, e);
    }))(i) : i;
  }), [ n, t, u, r, e.pause, e.requestPolicy, e.context ]);
  var d = a((function(e, t) {
    if (!e) {
      return {
        fetching: !1
      };
    }
    var r = n.get(u.key);
    if (!r) {
      var i;
      var a = f((function(e) {
        r = e;
        if (i) {
          i(r);
        }
      }))(v((function() {
        return t && !i || !r;
      }))(e));
      if (null == r && t) {
        var o = new Promise((function(e) {
          i = e;
        }));
        n.set(u.key, o);
        throw o;
      } else {
        a.unsubscribe();
      }
    } else if (t && null != r && "then" in r) {
      throw r;
    }
    return r || {
      fetching: !0
    };
  }), [ n, u ]);
  var x = [ t, u, e.requestPolicy, e.context, e.pause ];
  var h = i((function() {
    q = !0;
    try {
      return [ s, computeNextState(b, d(s, r)), x ];
    } finally {
      q = !1;
    }
  }));
  var y = h[0];
  var g = h[1];
  var m = y[1];
  if (s !== y[0] && hasDepsChanged(y[2], x)) {
    g([ s, m = computeNextState(y[1], d(s, r)), x ]);
  }
  o((function() {
    var e = y[0];
    var t = y[2][1];
    var r = !1;
    function updateResult(e) {
      r = !0;
      if (!q) {
        g((function(t) {
          var n = computeNextState(t[1], e);
          return t[1] !== n ? [ t[0], n, t[2] ] : t;
        }));
      }
    }
    if (e) {
      var u = f(updateResult)(p((function() {
        updateResult({
          fetching: !1
        });
      }))(e));
      if (!r) {
        updateResult({
          fetching: !0
        });
      }
      return function() {
        n.dispose(t.key);
        u.unsubscribe();
      };
    } else {
      updateResult({
        fetching: !1
      });
    }
  }), [ n, y[0], y[2][1] ]);
  return [ m, a((function(i) {
    var a = _extends({}, {
      requestPolicy: e.requestPolicy
    }, e.context, i);
    g((function(e) {
      return [ r ? l((function(e) {
        n.set(u.key, e);
      }))(t.executeQuery(u, a)) : t.executeQuery(u, a), e[1], x ];
    }));
  }), [ t, n, u, r, d, e.requestPolicy, e.context ]) ];
}

function useSubscription(e, t) {
  var n = useClient();
  var r = useRequest(e.query, e.variables);
  var s = u(t);
  s.current = t;
  var l = c((function() {
    return !e.pause ? n.executeSubscription(r, e.context) : null;
  }), [ n, r, e.pause, e.context ]);
  var v = [ n, r, e.context, e.pause ];
  var d = i((function() {
    return [ l, _extends({}, b, {
      fetching: !!l
    }), v ];
  }));
  var x = d[0];
  var h = d[1];
  var y = x[1];
  if (l !== x[0] && hasDepsChanged(x[2], v)) {
    h([ l, y = computeNextState(x[1], {
      fetching: !!l
    }), v ]);
  }
  o((function() {
    function updateResult(e) {
      h((function(t) {
        var n = computeNextState(t[1], e);
        if (t[1] === n) {
          return t;
        }
        if (s.current && t[1].data !== n.data) {
          n.data = s.current(t[1].data, n.data);
        }
        return [ t[0], n, t[2] ];
      }));
    }
    if (x[0]) {
      return f(updateResult)(p((function() {
        updateResult({
          fetching: !1
        });
      }))(x[0])).unsubscribe;
    } else {
      updateResult({
        fetching: !1
      });
    }
  }), [ x[0] ]);
  return [ y, a((function(t) {
    var u = n.executeSubscription(r, _extends({}, e.context, t));
    h((function(e) {
      return [ u, e[1], e[2] ];
    }));
  }), [ n, e.context, r ]) ];
}

function Mutation(e) {
  var t = useMutation(e.query);
  return e.children(_extends({}, t[0], {
    executeMutation: t[1]
  }));
}

function Query(e) {
  var t = useQuery(e);
  return e.children(_extends({}, t[0], {
    executeQuery: t[1]
  }));
}

function Subscription(e) {
  var t = useSubscription(e, e.handler);
  return e.children(_extends({}, t[0], {
    executeSubscription: t[1]
  }));
}

export { y as Consumer, x as Context, Mutation, h as Provider, Query, Subscription, useClient, useMutation, useQuery, useSubscription };
//# sourceMappingURL=urql.es.js.map
