{"version":3,"file":"authorizer-react.cjs.production.min.js","sources":["../src/constants/index.ts","../src/utils/window.ts","../src/contexts/AuthorizerContext.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/styledComponents/StyledWrapper.tsx","../src/styledComponents/StyledButton.tsx","../src/styledComponents/StyledLink.tsx","../src/styledComponents/StyledSeparator.tsx","../src/styledComponents/StyledFooter.tsx","../src/styledComponents/StyledMessageWrapper.tsx","../src/styledComponents/StyledFlex.tsx","../src/styledComponents/StyledPasswordStrength.tsx","../src/styledComponents/StyledPasswordStrengthWrapper.tsx","../src/utils/format.ts","../src/icons/close.tsx","../src/components/Message.tsx","../src/utils/validations.ts","../src/components/PasswordStrengthIndicator.tsx","../src/components/AuthorizerVerifyOtp.tsx","../src/utils/labels.ts","../src/components/AuthorizerSignup.tsx","../src/components/AuthorizerTOTPScanner.tsx","../src/components/AuthorizerBasicAuthLogin.tsx","../src/components/AuthorizerMagicLinkLogin.tsx","../src/components/AuthorizerResetPassword.tsx","../src/utils/url.ts","../src/components/AuthorizerForgotPassword.tsx","../src/icons/github.tsx","../src/icons/google.tsx","../src/icons/facebook.tsx","../src/icons/linkedin.tsx","../src/icons/apple.tsx","../src/icons/twitter.tsx","../src/icons/microsoft.tsx","../src/icons/twitch.tsx","../src/icons/roblox.tsx","../src/components/AuthorizerSocialLogin.tsx","../src/utils/common.ts","../src/components/AuthorizerRoot.tsx"],"sourcesContent":["export enum Views {\n  Login,\n  Signup,\n  ForgotPassword,\n}\n\nexport enum ButtonAppearance {\n  Primary,\n  Default,\n}\n\nexport enum MessageType {\n  Error,\n  Success,\n  Info,\n}\n\nexport enum AuthorizerProviderActionType {\n  SET_USER = 'SET_USER',\n  SET_TOKEN = 'SET_TOKEN',\n  SET_LOADING = 'SET_LOADING',\n  SET_AUTH_DATA = 'SET_AUTH_DATA',\n  SET_CONFIG = 'SET_CONFIG',\n}\n\n// TODO use based on theme primary color\nexport const passwordStrengthIndicatorOpacity: Record<string, number> = {\n  default: 0.15,\n  weak: 0.4,\n  good: 0.6,\n  strong: 0.8,\n  veryStrong: 1,\n};\n","export const hasWindow = (): boolean => typeof window !== 'undefined';\n","import React, {\n  FC,\n  createContext,\n  useReducer,\n  useContext,\n  useRef,\n  useEffect,\n} from 'react';\nimport { Authorizer, User, AuthToken } from '@authorizerdev/authorizer-js';\n\nimport {\n  AuthorizerContextPropsType,\n  AuthorizerState,\n  AuthorizerProviderAction,\n} from '../types';\nimport { AuthorizerProviderActionType } from '../constants';\nimport { hasWindow } from '../utils/window';\n\nconst AuthorizerContext = createContext<AuthorizerContextPropsType>({\n  config: {\n    authorizerURL: '',\n    redirectURL: '/',\n    client_id: '',\n    is_google_login_enabled: false,\n    is_github_login_enabled: false,\n    is_facebook_login_enabled: false,\n    is_linkedin_login_enabled: false,\n    is_apple_login_enabled: false,\n    is_twitter_login_enabled: false,\n    is_microsoft_login_enabled: false,\n    is_twitch_login_enabled: false,\n    is_roblox_login_enabled: false,\n    is_email_verification_enabled: false,\n    is_basic_authentication_enabled: false,\n    is_magic_link_login_enabled: false,\n    is_sign_up_enabled: false,\n    is_strong_password_enabled: true,\n    is_multi_factor_auth_enabled: false,\n    is_mobile_basic_authentication_enabled: false,\n    is_phone_verification_enabled: false,\n  },\n  user: null,\n  token: null,\n  loading: false,\n  setLoading: () => {},\n  setToken: () => {},\n  setUser: () => {},\n  setAuthData: () => {},\n  authorizerRef: new Authorizer({\n    authorizerURL: `http://localhost:8080`,\n    redirectURL: hasWindow() ? window.location.origin : '/',\n    clientID: '',\n  }),\n  logout: async () => {},\n});\n\nfunction reducer(\n  state: AuthorizerState,\n  action: AuthorizerProviderAction\n): AuthorizerState {\n  switch (action.type) {\n    case AuthorizerProviderActionType.SET_USER:\n      return { ...state, user: action.payload.user };\n    case AuthorizerProviderActionType.SET_TOKEN:\n      return {\n        ...state,\n        token: action.payload.token,\n      };\n    case AuthorizerProviderActionType.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload.loading,\n      };\n    case AuthorizerProviderActionType.SET_CONFIG:\n      return {\n        ...state,\n        config: action.payload.config,\n      };\n    case AuthorizerProviderActionType.SET_AUTH_DATA:\n      return {\n        ...action.payload,\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nlet initialState: AuthorizerState = {\n  user: null,\n  token: null,\n  loading: true,\n  config: {\n    authorizerURL: '',\n    redirectURL: '/',\n    client_id: '',\n    is_google_login_enabled: false,\n    is_github_login_enabled: false,\n    is_facebook_login_enabled: false,\n    is_linkedin_login_enabled: false,\n    is_apple_login_enabled: false,\n    is_twitter_login_enabled: false,\n    is_microsoft_login_enabled: false,\n    is_twitch_login_enabled: false,\n    is_roblox_login_enabled: false,\n    is_email_verification_enabled: false,\n    is_basic_authentication_enabled: false,\n    is_magic_link_login_enabled: false,\n    is_sign_up_enabled: false,\n    is_strong_password_enabled: true,\n    is_multi_factor_auth_enabled: false,\n    is_mobile_basic_authentication_enabled: false,\n    is_phone_verification_enabled: false,\n  },\n};\n\nexport const AuthorizerProvider: FC<{\n  children: React.ReactNode;\n  config: {\n    authorizerURL: string;\n    redirectURL: string;\n    clientID?: string;\n  };\n  onStateChangeCallback?: (stateData: AuthorizerState) => Promise<void>;\n}> = ({ config: defaultConfig, onStateChangeCallback, children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    config: {\n      ...initialState.config,\n      ...defaultConfig,\n    },\n  });\n\n  let intervalRef: any = null;\n\n  const authorizerRef = useRef(\n    new Authorizer({\n      authorizerURL: state.config.authorizerURL,\n      redirectURL: hasWindow()\n        ? state.config.redirectURL || window.location.origin\n        : state.config.redirectURL || '/',\n      clientID: state.config.client_id,\n    })\n  );\n\n  const getToken = async () => {\n    const {\n      data: metaRes,\n      errors: metaResErrors,\n    } = await authorizerRef.current.getMetaData();\n    try {\n      if (metaResErrors && metaResErrors.length) {\n        throw new Error(metaResErrors[0].message);\n      }\n      const { data: res, errors } = await authorizerRef.current.getSession();\n      if (errors && errors.length) {\n        throw new Error(errors[0].message);\n      }\n      if (res && res.access_token && res.user) {\n        const token = {\n          access_token: res.access_token,\n          expires_in: res.expires_in,\n          id_token: res.id_token,\n          refresh_token: res.refresh_token || '',\n        };\n        dispatch({\n          type: AuthorizerProviderActionType.SET_AUTH_DATA,\n          payload: {\n            ...state,\n            token,\n            user: res.user,\n            config: {\n              ...state.config,\n              ...metaRes,\n            },\n            loading: false,\n          },\n        });\n\n        // const millisecond = getIntervalDiff(res.expires_at);\n        // if (millisecond > 0) {\n        //   if (intervalRef) clearInterval(intervalRef);\n        //   intervalRef = setInterval(() => {\n        //     getToken();\n        //   }, millisecond);\n        // }\n        if (intervalRef) clearInterval(intervalRef);\n        intervalRef = setInterval(() => {\n          getToken();\n        }, res.expires_in * 1000);\n      } else {\n        dispatch({\n          type: AuthorizerProviderActionType.SET_AUTH_DATA,\n          payload: {\n            ...state,\n            token: null,\n            user: null,\n            config: {\n              ...state.config,\n              ...metaRes,\n            },\n            loading: false,\n          },\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AuthorizerProviderActionType.SET_AUTH_DATA,\n        payload: {\n          ...state,\n          token: null,\n          user: null,\n          config: {\n            ...state.config,\n            ...metaRes,\n          },\n          loading: false,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    getToken();\n    return () => {\n      if (intervalRef) {\n        clearInterval(intervalRef);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (onStateChangeCallback) {\n      onStateChangeCallback(state);\n    }\n  }, [state]);\n\n  const handleTokenChange = (token: AuthToken | null) => {\n    dispatch({\n      type: AuthorizerProviderActionType.SET_TOKEN,\n      payload: {\n        token,\n      },\n    });\n\n    if (token?.access_token) {\n      if (intervalRef) clearInterval(intervalRef);\n      intervalRef = setInterval(() => {\n        getToken();\n      }, token.expires_in * 1000);\n    }\n  };\n\n  const setAuthData = (data: AuthorizerState) => {\n    dispatch({\n      type: AuthorizerProviderActionType.SET_AUTH_DATA,\n      payload: data,\n    });\n\n    if (data.token?.access_token) {\n      if (intervalRef) clearInterval(intervalRef);\n      intervalRef = setInterval(() => {\n        getToken();\n      }, data.token.expires_in * 1000);\n    }\n  };\n\n  const setUser = (user: User | null) => {\n    dispatch({\n      type: AuthorizerProviderActionType.SET_USER,\n      payload: {\n        user,\n      },\n    });\n  };\n\n  const setLoading = (loading: boolean) => {\n    dispatch({\n      type: AuthorizerProviderActionType.SET_LOADING,\n      payload: {\n        loading,\n      },\n    });\n  };\n\n  const logout = async () => {\n    dispatch({\n      type: AuthorizerProviderActionType.SET_LOADING,\n      payload: {\n        loading: true,\n      },\n    });\n    await authorizerRef.current.logout();\n    const loggedOutState = {\n      user: null,\n      token: null,\n      loading: false,\n      config: state.config,\n    };\n    dispatch({\n      type: AuthorizerProviderActionType.SET_AUTH_DATA,\n      payload: loggedOutState,\n    });\n  };\n\n  return (\n    <AuthorizerContext.Provider\n      value={{\n        ...state,\n        setUser,\n        setLoading,\n        setToken: handleTokenChange,\n        setAuthData: setAuthData,\n        authorizerRef: authorizerRef.current,\n        logout,\n      }}\n    >\n      {children}\n    </AuthorizerContext.Provider>\n  );\n};\n\nexport const useAuthorizer = () => useContext(AuthorizerContext);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledWrapper = ({ children }: { children: ReactNode }) => {\n  return <div className={styles['styled-wrapper']}>{children}</div>;\n};\n\nexport default StyledWrapper;\n","import React, { MouseEventHandler, ReactNode } from 'react';\nimport { ButtonAppearance } from '../constants';\nimport styles from '../styles/default.css';\n\nconst StyledButton = ({\n  style = {\n    width: '100%',\n  },\n  type,\n  appearance = ButtonAppearance.Default,\n  disabled = false,\n  onClick,\n  children,\n}: {\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  style?: Record<string, string>;\n  appearance?: ButtonAppearance;\n  disabled?: boolean;\n  onClick?: MouseEventHandler<HTMLSpanElement>;\n  children: ReactNode;\n}) => {\n  return (\n    <button\n      className={styles['styled-button']}\n      type={type}\n      style={{\n        width: style.width,\n        backgroundColor: disabled\n          ? 'var(--authorizer-primary-disabled-color)'\n          : appearance === ButtonAppearance.Primary\n          ? 'var(--authorizer-primary-color)'\n          : 'var(--authorizer-white-color)',\n        color:\n          appearance === ButtonAppearance.Default\n            ? 'var(--authorizer-text-color)'\n            : 'var(--authorizer-white-color)',\n        border: appearance === ButtonAppearance.Primary ? '0px' : '1px',\n      }}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default StyledButton;\n","import React, { MouseEventHandler, ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledLink = ({\n  marginBottom = '0px',\n  children,\n  onClick,\n}: {\n  marginBottom?: string;\n  children: ReactNode;\n  onClick: MouseEventHandler<HTMLSpanElement>;\n}) => {\n  return (\n    <span\n      className={styles['styled-link']}\n      style={{ marginBottom }}\n      onClick={onClick}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default StyledLink;\n","import React, { ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledSeparator = ({ children }: { children?: ReactNode }) => {\n  return <div className={styles['styled-separator']}>{children}</div>;\n};\n\nexport default StyledSeparator;\n","import React, { ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledFooter = ({ children }: { children: ReactNode }) => {\n  return <div className={styles['styled-footer']}>{children}</div>;\n};\n\nexport default StyledFooter;\n","import React, { ReactNode } from 'react';\nimport { MessageType } from '../constants';\nimport styles from '../styles/default.css';\n\nconst getBackgroundColor = (type: MessageType): string => {\n  switch (type) {\n    case MessageType.Error:\n      return 'var(--authorizer-danger-color)';\n    case MessageType.Success:\n      return 'var(--authorizer-success-color)';\n    case MessageType.Info:\n      return 'var(--authorizer-slate-color)';\n    default:\n      return 'var(--authorizer-success-color)';\n  }\n};\n\nconst StyledMessageWrapper = ({\n  type = MessageType.Success,\n  styles: extraStyles = {},\n  children,\n}: {\n  type: MessageType;\n  children: ReactNode;\n  styles?: Record<string, string>;\n}) => {\n  return (\n    <div\n      className={styles['styled-message-wrapper']}\n      style={{\n        backgroundColor: getBackgroundColor(type),\n        ...extraStyles,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default StyledMessageWrapper;\n","import React, { ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledFlex = ({\n  flexDirection = 'row',\n  alignItems = 'center',\n  justifyContent = 'center',\n  wrap = 'wrap',\n  width = 'inherit',\n  children,\n}: {\n  flexDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\n  alignItems?: string;\n  justifyContent?: string;\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  width?: string;\n  children: ReactNode;\n}) => {\n  return (\n    <div\n      className={styles['styled-flex']}\n      style={{\n        flexDirection,\n        alignItems,\n        justifyContent,\n        flexWrap: wrap,\n        width: width,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default StyledFlex;\n","import React, { ReactNode } from 'react';\nimport { passwordStrengthIndicatorOpacity } from '../constants';\nimport styles from '../styles/default.css';\n\nconst StyledPasswordStrength = ({\n  strength = 'default',\n  children,\n}: {\n  strength: string;\n  children?: ReactNode;\n}) => {\n  return (\n    <div\n      className={styles['styled-password-strength']}\n      style={{ opacity: passwordStrengthIndicatorOpacity[strength] }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default StyledPasswordStrength;\n","import React, { ReactNode } from 'react';\nimport styles from '../styles/default.css';\n\nconst StyledPasswordStrengthWrapper = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  return (\n    <div className={styles['styled-password-strength-wrapper']}>{children}</div>\n  );\n};\n\nexport default StyledPasswordStrengthWrapper;\n","export const formatErrorMessage = (message: string): string => {\n  return message.replace(`[GraphQL] `, '');\n};\n\nexport const capitalizeFirstLetter = (data: string): string => {\n  return data.charAt(0).toUpperCase() + data.slice(1);\n};\n","import React from 'react';\n\nexport const IconClose = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 1000 1000\"\n    width=\"10px\"\n    height=\"10px\"\n  >\n    <g>\n      <path\n        fill=\"#ffffff\"\n        d=\"M617.2,495.8l349.1,350.9c31.7,31.8,31.7,83.5,0,115.3c-31.7,31.9-83.1,31.9-114.8,0L502.4,611.2L149.8,965.6c-32,32.2-83.8,32.2-115.8,0c-32-32.1-32-84.3,0-116.4l352.6-354.5L48.2,154.6c-31.7-31.9-31.7-83.5,0-115.4c31.7-31.9,83.1-31.9,114.7,0l338.4,340.2l343.3-345c32-32.1,83.8-32.1,115.8,0c32,32.2,32,84.3,0,116.4L617.2,495.8z\"\n      />\n    </g>\n  </svg>\n);\n","import React, { FC } from 'react';\nimport { MessageType } from '../constants';\nimport { IconClose } from '../icons/close';\nimport { StyledMessageWrapper, StyledFlex } from '../styledComponents';\nimport { capitalizeFirstLetter } from '../utils/format';\n\ntype Props = {\n  type: MessageType;\n  text: string;\n  onClose?: () => void;\n  extraStyles?: Record<string, string>;\n};\n\nexport const Message: FC<Props> = ({ type, text, extraStyles, onClose }) => {\n  if (text.trim()) {\n    return (\n      <StyledMessageWrapper type={type} styles={extraStyles}>\n        <StyledFlex alignItems=\"center\" justifyContent=\"space-between\">\n          <div style={{ flex: 1 }}>{capitalizeFirstLetter(text)}</div>\n          {onClose && (\n            <span style={{ cursor: 'pointer' }} onClick={onClose}>\n              <IconClose />\n            </span>\n          )}\n        </StyledFlex>\n      </StyledMessageWrapper>\n    );\n  }\n\n  return null;\n};\n","export const isValidOtp = (otp: string): boolean => {\n  const re = /^([A-Z0-9]{6})$/;\n  return re.test(String(otp.trim()));\n};\n\nexport const hasSpecialChar = (char: string): boolean => {\n  const re = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  return re.test(char);\n};\n\nexport const validatePassword = (\n  value: string\n): {\n  score: number;\n  strength: string;\n  hasSixChar: boolean;\n  hasLowerCase: boolean;\n  hasUpperCase: boolean;\n  hasNumericChar: boolean;\n  hasSpecialChar: boolean;\n  maxThirtySixChar: boolean;\n  isValid: boolean;\n} => {\n  const res = {\n    score: 0,\n    strength: '',\n    hasSixChar: false,\n    hasLowerCase: false,\n    hasUpperCase: false,\n    hasNumericChar: false,\n    hasSpecialChar: false,\n    maxThirtySixChar: false,\n  };\n\n  if (value.length >= 6) {\n    res.score = res.score + 1;\n    res.hasSixChar = true;\n  }\n\n  if (value.length > 0 && value.length <= 36) {\n    res.score = res.score + 1;\n    res.maxThirtySixChar = true;\n  }\n\n  Array.from(value).forEach((char: any) => {\n    if (char >= 'A' && char <= 'Z' && !res.hasUpperCase) {\n      res.score = res.score + 1;\n      res.hasUpperCase = true;\n    } else if (char >= 'a' && char <= 'z' && !res.hasLowerCase) {\n      res.score = res.score + 1;\n      res.hasLowerCase = true;\n    } else if (char >= '0' && char <= '9' && !res.hasNumericChar) {\n      res.score = res.score + 1;\n      res.hasNumericChar = true;\n    } else if (hasSpecialChar(char) && !res.hasSpecialChar) {\n      res.score = res.score + 1;\n      res.hasSpecialChar = true;\n    }\n  });\n\n  if (res.score <= 2) {\n    res.strength = 'Weak';\n  } else if (res.score <= 4) {\n    res.strength = 'Good';\n  } else if (res.score <= 5) {\n    res.strength = 'Strong';\n  } else {\n    res.strength = 'Very Strong';\n  }\n\n  const isValid = Object.values(res).every((i) => Boolean(i));\n  return { ...res, isValid };\n};\n","import React from 'react';\nimport {\n  StyledFlex,\n  StyledPasswordStrengthWrapper,\n  StyledPasswordStrength,\n} from '../styledComponents';\nimport { validatePassword } from '../utils/validations';\n\ninterface PropTypes {\n  value: string;\n  setDisableButton: Function;\n}\n\nconst PasswordStrengthIndicator = ({ value, setDisableButton }: PropTypes) => {\n  const [\n    {\n      strength,\n      score,\n      hasSixChar,\n      hasLowerCase,\n      hasNumericChar,\n      hasSpecialChar,\n      hasUpperCase,\n      maxThirtySixChar,\n    },\n    setValidations,\n  ] = React.useState({ ...validatePassword(value || '') });\n\n  React.useEffect(() => {\n    const validationData = validatePassword(value || '');\n    setValidations({ ...validationData });\n    if (!validationData.isValid) {\n      setDisableButton(true);\n    } else {\n      setDisableButton(false);\n    }\n  }, [value]);\n\n  return (\n    <div>\n      <StyledPasswordStrengthWrapper>\n        <StyledFlex alignItems=\"center\" justifyContent=\"center\" wrap=\"nowrap\">\n          <StyledPasswordStrength strength={score > 2 ? `weak` : `default`} />\n          <StyledPasswordStrength strength={score > 3 ? `good` : `default`} />\n          <StyledPasswordStrength strength={score > 4 ? `strong` : `default`} />\n          <StyledPasswordStrength\n            strength={score > 5 ? `veryStrong` : `default`}\n          />\n          {!!score && <div>{strength}</div>}\n        </StyledFlex>\n      </StyledPasswordStrengthWrapper>\n      <p>\n        <b>Criteria for a strong password:</b>\n      </p>\n      <StyledFlex flexDirection=\"column\">\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={hasSixChar} />\n          <div style={{ marginLeft: '5px' }}>At least 6 characters</div>\n        </StyledFlex>\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={hasLowerCase} />\n          <div style={{ marginLeft: '5px' }}>At least 1 lowercase letter</div>\n        </StyledFlex>\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={hasUpperCase} />\n          <div style={{ marginLeft: '5px' }}>At least 1 uppercase letter</div>\n        </StyledFlex>\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={hasNumericChar} />\n          <div style={{ marginLeft: '5px' }}>At least 1 numeric character</div>\n        </StyledFlex>\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={hasSpecialChar} />\n          <div style={{ marginLeft: '5px' }}>At least 1 special character</div>\n        </StyledFlex>\n        <StyledFlex\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <input readOnly type=\"checkbox\" checked={maxThirtySixChar} />\n          <div style={{ marginLeft: '5px' }}>Maximum 36 characters</div>\n        </StyledFlex>\n      </StyledFlex>\n    </div>\n  );\n};\n\nexport default PasswordStrengthIndicator;\n","import React, { FC, useEffect, useState } from 'react';\nimport { VerifyOtpInput } from '@authorizerdev/authorizer-js';\nimport styles from '../styles/default.css';\n\nimport { ButtonAppearance, MessageType, Views } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton, StyledFooter, StyledLink } from '../styledComponents';\nimport { Message } from './Message';\n\ninterface InputDataType {\n  otp: string | null;\n}\n\nexport const AuthorizerVerifyOtp: FC<{\n  setView?: (v: Views) => void;\n  onLogin?: (data: any) => void;\n  email?: string;\n  phone_number?: string;\n  urlProps?: Record<string, any>;\n  is_totp?: boolean;\n}> = ({ setView, onLogin, email, phone_number, urlProps, is_totp }) => {\n  const [error, setError] = useState(``);\n  const [successMessage, setSuccessMessage] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const [sendingOtp, setSendingOtp] = useState(false);\n  const [formData, setFormData] = useState<InputDataType>({\n    otp: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    otp: null,\n  });\n  const { authorizerRef, config, setAuthData } = useAuthorizer();\n  useEffect(() => {\n    if (!email && !phone_number) {\n      setError(`Email or Phone Number is required`);\n    }\n  }, []);\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    setSuccessMessage(``);\n    try {\n      setLoading(true);\n      const data: VerifyOtpInput = {\n        email,\n        phone_number,\n        otp: formData.otp || '',\n      };\n      if (urlProps?.state) {\n        data.state = urlProps.state;\n      }\n      data.is_totp = !!is_totp;\n      const { data: res, errors } = await authorizerRef.verifyOtp(data);\n      setLoading(false);\n      if (errors && errors.length) {\n        setError(errors[0]?.message || ``);\n        return;\n      }\n      if (res) {\n        setError(``);\n        setAuthData({\n          user: res.user || null,\n          token: {\n            access_token: res.access_token,\n            expires_in: res.expires_in,\n            refresh_token: res.refresh_token,\n            id_token: res.id_token,\n          },\n          config,\n          loading: false,\n        });\n      }\n\n      if (onLogin) {\n        onLogin(res);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError((err as Error).message);\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  const onSuccessClose = () => {\n    setSuccessMessage(``);\n  };\n\n  const resendOtp = async () => {\n    setSuccessMessage(``);\n    try {\n      setSendingOtp(true);\n\n      const { data: res, errors } = await authorizerRef.resendOtp({\n        email,\n        phone_number,\n      });\n      setSendingOtp(false);\n      if (errors && errors.length) {\n        setError(errors[0]?.message || ``);\n        return;\n      }\n\n      if (res && res?.message) {\n        setError(``);\n        setSuccessMessage(res.message);\n      }\n\n      if (onLogin) {\n        onLogin(res);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError((err as Error).message);\n    }\n  };\n\n  useEffect(() => {\n    if (formData.otp === '') {\n      setErrorData({ ...errorData, otp: 'OTP is required' });\n    } else {\n      setErrorData({ ...errorData, otp: null });\n    }\n  }, [formData.otp]);\n\n  return (\n    <>\n      {successMessage && (\n        <Message\n          type={MessageType.Success}\n          text={successMessage}\n          onClose={onSuccessClose}\n        />\n      )}\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      <p style={{ textAlign: 'center', margin: '10px 0px' }}>\n        Please enter the OTP sent to your email or phone number or authenticator\n      </p>\n      <br />\n      <form onSubmit={onSubmit} name=\"authorizer-mfa-otp-form\">\n        <div className={styles['styled-form-group']}>\n          <label\n            className={styles['form-input-label']}\n            htmlFor=\"authorizer-verify-otp\"\n          >\n            <span>* </span>OTP (One Time Password)\n          </label>\n          <input\n            name=\"otp\"\n            id=\"authorizer-verify-otp\"\n            className={`${styles['form-input-field']} ${\n              errorData.otp ? styles['input-error-content'] : null\n            }`}\n            placeholder=\"e.g.- AB123C\"\n            type=\"password\"\n            value={formData.otp || ''}\n            onChange={e => onInputChange('otp', e.target.value)}\n          />\n          {errorData.otp && (\n            <div className={styles['form-input-error']}>{errorData.otp}</div>\n          )}\n          {is_totp && (\n            <Message\n              type={MessageType.Info}\n              text={`If you have lost access to your device, please enter recovery code that were shared while enabling Multifactor Authentication.`}\n              extraStyles={{\n                color: 'var(--authorizer-text-color)',\n              }}\n            />\n          )}\n        </div>\n        <br />\n        <StyledButton\n          type=\"submit\"\n          disabled={loading || !formData.otp || !!errorData.otp}\n          appearance={ButtonAppearance.Primary}\n        >\n          {loading ? `Processing ...` : `Submit`}\n        </StyledButton>\n      </form>\n      {setView && (\n        <StyledFooter>\n          {sendingOtp ? (\n            <div style={{ marginBottom: '10px' }}>Sending ...</div>\n          ) : (\n            <StyledLink onClick={resendOtp} marginBottom=\"10px\">\n              Resend OTP\n            </StyledLink>\n          )}\n          {config.is_sign_up_enabled && (\n            <div>\n              Don't have an account?{' '}\n              <StyledLink onClick={() => setView(Views.Signup)}>\n                Sign Up\n              </StyledLink>\n            </div>\n          )}\n        </StyledFooter>\n      )}\n    </>\n  );\n};\n","import { AuthorizerConfig } from '../types';\n\nexport const getEmailPhoneLabels = (config: AuthorizerConfig): string => {\n  const emailLabel = 'Email';\n  const phoneLabel = 'Phone Number';\n  if (\n    config.is_basic_authentication_enabled &&\n    config.is_mobile_basic_authentication_enabled\n  ) {\n    return `${emailLabel} / ${phoneLabel}`;\n  } else if (config.is_basic_authentication_enabled) {\n    return emailLabel;\n  } else if (config.is_mobile_basic_authentication_enabled) {\n    return phoneLabel;\n  }\n  return emailLabel;\n};\n\nexport const getEmailPhonePlaceholder = (config: AuthorizerConfig): string => {\n  const emailPlaceholder = 'hello@world.com';\n  const phonePlaceholder = '+919999999999';\n  const prefix = 'eg.';\n  if (\n    config.is_basic_authentication_enabled &&\n    config.is_mobile_basic_authentication_enabled\n  ) {\n    return `${prefix} ${emailPlaceholder} / ${phonePlaceholder}`;\n  } else if (config.is_basic_authentication_enabled) {\n    return `${prefix} ${emailPlaceholder}`;\n  } else if (config.is_mobile_basic_authentication_enabled) {\n    return `${prefix} ${phonePlaceholder}`;\n  }\n  return emailPlaceholder;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { AuthToken, SignupInput } from '@authorizerdev/authorizer-js';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\n\nimport styles from '../styles/default.css';\nimport { ButtonAppearance, MessageType, Views } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton, StyledFooter, StyledLink } from '../styledComponents';\nimport { formatErrorMessage } from '../utils/format';\nimport { Message } from './Message';\nimport PasswordStrengthIndicator from './PasswordStrengthIndicator';\nimport { OtpDataType } from '../types';\nimport { AuthorizerVerifyOtp } from './AuthorizerVerifyOtp';\nimport { getEmailPhoneLabels, getEmailPhonePlaceholder } from '../utils/labels';\n\ninterface InputDataType {\n  given_name: string | null;\n  family_name: string | null;\n  email_or_phone_number: string | null;\n  password: string | null;\n  confirmPassword: string | null;\n}\n\nconst initOtpData: OtpDataType = {\n  is_screen_visible: false,\n  email: '',\n  phone_number: '',\n};\n\nexport const AuthorizerSignup: FC<{\n  setView?: (v: Views) => void;\n  onSignup?: (data: AuthToken) => void;\n  urlProps?: Record<string, any>;\n  roles?: string[];\n}> = ({ setView, onSignup, urlProps, roles }) => {\n  const [error, setError] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const [otpData, setOtpData] = useState<OtpDataType>({ ...initOtpData });\n  const [successMessage, setSuccessMessage] = useState(``);\n  const [formData, setFormData] = useState<InputDataType>({\n    given_name: null,\n    family_name: null,\n    email_or_phone_number: null,\n    password: null,\n    confirmPassword: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    given_name: null,\n    family_name: null,\n    email_or_phone_number: null,\n    password: null,\n    confirmPassword: null,\n  });\n  const { authorizerRef, config, setAuthData } = useAuthorizer();\n  const [disableSignupButton, setDisableSignupButton] = useState(false);\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      let email: string = '';\n      let phone_number: string = '';\n      if (formData.email_or_phone_number) {\n        if (isEmail(formData.email_or_phone_number)) {\n          email = formData.email_or_phone_number;\n        } else if (isMobilePhone(formData.email_or_phone_number)) {\n          phone_number = formData.email_or_phone_number;\n        }\n      }\n      if (!email && !phone_number) {\n        setErrorData({\n          ...errorData,\n          email_or_phone_number: 'Invalid email or phone number',\n        });\n        setLoading(false);\n        return;\n      }\n      const data: SignupInput = {\n        email: email,\n        phone_number: phone_number,\n        given_name: formData.given_name || '',\n        family_name: formData.family_name || '',\n        password: formData.password || '',\n        confirm_password: formData.confirmPassword || '',\n      };\n      if (urlProps?.scope) {\n        data.scope = urlProps.scope;\n      }\n      if (urlProps?.roles) {\n        data.roles = urlProps.roles;\n      }\n      if (urlProps?.redirect_uri) {\n        data.redirect_uri = urlProps.redirect_uri;\n      }\n      if (urlProps?.state) {\n        data.state = urlProps.state;\n      }\n      if (roles && roles.length) {\n        data.roles = roles;\n      }\n      const { data: res, errors } = await authorizerRef.signup(data);\n      if (errors && errors.length) {\n        setError(formatErrorMessage(errors[0]?.message));\n        setLoading(false);\n        return;\n      }\n      if (\n        res &&\n        (res?.should_show_email_otp_screen ||\n          res?.should_show_mobile_otp_screen)\n      ) {\n        setOtpData({\n          is_screen_visible: true,\n          email: data.email || ``,\n          phone_number: data.phone_number || ``,\n        });\n        return;\n      }\n      if (res) {\n        setError(``);\n        if (res.access_token) {\n          setError(``);\n          setAuthData({\n            user: res.user || null,\n            token: {\n              access_token: res.access_token,\n              expires_in: res.expires_in,\n              refresh_token: res.refresh_token,\n              id_token: res.id_token,\n            },\n            config,\n            loading: false,\n          });\n        } else {\n          setLoading(false);\n          setSuccessMessage(res.message || ``);\n        }\n\n        if (onSignup) {\n          onSignup(res);\n        }\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(formatErrorMessage((err as Error).message));\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  useEffect(() => {\n    if ((formData.given_name || '').trim() === '') {\n      setErrorData({ ...errorData, given_name: 'First Name is required' });\n    } else {\n      setErrorData({ ...errorData, given_name: null });\n    }\n  }, [formData.given_name]);\n\n  useEffect(() => {\n    if ((formData.family_name || '').trim() === '') {\n      setErrorData({ ...errorData, family_name: 'Last Name is required' });\n    } else {\n      setErrorData({ ...errorData, family_name: null });\n    }\n  }, [formData.family_name]);\n\n  useEffect(() => {\n    if (formData.email_or_phone_number === '') {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Email OR Phone Number is required',\n      });\n    } else if (\n      !isEmail(formData.email_or_phone_number || '') &&\n      !isMobilePhone(formData.email_or_phone_number || '')\n    ) {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Invalid Email OR Phone Number',\n      });\n    } else {\n      setErrorData({ ...errorData, email_or_phone_number: null });\n    }\n  }, [formData.email_or_phone_number]);\n\n  useEffect(() => {\n    if (formData.password === '') {\n      setErrorData({ ...errorData, password: 'Password is required' });\n    } else {\n      setErrorData({ ...errorData, password: null });\n    }\n  }, [formData.password]);\n\n  useEffect(() => {\n    if (formData.confirmPassword === '') {\n      setErrorData({\n        ...errorData,\n        confirmPassword: 'Confirm password is required',\n      });\n    } else {\n      setErrorData({ ...errorData, confirmPassword: null });\n    }\n  }, [formData.confirmPassword]);\n\n  useEffect(() => {\n    if (formData.password && formData.confirmPassword) {\n      if (formData.confirmPassword !== formData.password) {\n        setErrorData({\n          ...errorData,\n          password: `Password and confirm passwords don't match`,\n          confirmPassword: `Password and confirm passwords don't match`,\n        });\n      } else {\n        setErrorData({\n          ...errorData,\n          password: null,\n          confirmPassword: null,\n        });\n      }\n    }\n  }, [formData.password, formData.confirmPassword]);\n\n  if (otpData.is_screen_visible) {\n    return (\n      <>\n        {successMessage && (\n          <Message type={MessageType.Success} text={successMessage} />\n        )}\n        <AuthorizerVerifyOtp\n          {...{\n            setView,\n            onLogin: onSignup,\n            email: otpData.email || ``,\n            phone_number: otpData.phone_number || ``,\n            is_totp: otpData.is_totp || false,\n          }}\n          urlProps={urlProps}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      {successMessage && (\n        <Message type={MessageType.Success} text={successMessage} />\n      )}\n      {(config.is_basic_authentication_enabled ||\n        config.is_mobile_basic_authentication_enabled) &&\n        !config.is_magic_link_login_enabled && (\n          <>\n            <form onSubmit={onSubmit} name=\"authorizer-sign-up-form\">\n              <div className={styles['styled-form-group']}>\n                <label\n                  className={styles['form-input-label']}\n                  htmlFor=\"authorizer-sign-up-given-name\"\n                >\n                  <span>* </span>First Name\n                </label>\n                <input\n                  name=\"given_name\"\n                  id=\"authorizer-sign-up-given-name\"\n                  className={`${styles['form-input-field']} ${\n                    errorData.given_name ? styles['input-error-content'] : null\n                  }`}\n                  placeholder=\"eg. John\"\n                  type=\"text\"\n                  value={formData.given_name || ''}\n                  onChange={e => onInputChange('given_name', e.target.value)}\n                />\n                {errorData.given_name && (\n                  <div className={styles['form-input-error']}>\n                    {errorData.given_name}\n                  </div>\n                )}\n              </div>\n              <div className={styles['styled-form-group']}>\n                <label\n                  className={styles['form-input-label']}\n                  htmlFor=\"authorizer-sign-up-family-name\"\n                >\n                  <span>* </span>Last Name\n                </label>\n                <input\n                  name=\"family_name\"\n                  id=\"authorizer-sign-up-family-name\"\n                  className={`${styles['form-input-field']} ${\n                    errorData.family_name ? styles['input-error-content'] : null\n                  }`}\n                  placeholder=\"eg. Doe\"\n                  type=\"text\"\n                  value={formData.family_name || ''}\n                  onChange={e => onInputChange('family_name', e.target.value)}\n                />\n                {errorData.family_name && (\n                  <div className={styles['form-input-error']}>\n                    {errorData.family_name}\n                  </div>\n                )}\n              </div>\n              <div className={styles['styled-form-group']}>\n                <label\n                  className={styles['form-input-label']}\n                  htmlFor=\"authorizer-sign-up-email-or-phone-number\"\n                >\n                  <span>* </span>\n                  {getEmailPhoneLabels(config)}\n                </label>\n                <input\n                  name=\"email_or_phone_number\"\n                  id=\"authorizer-sign-up-email-or-phone-number\"\n                  className={`${styles['form-input-field']} ${\n                    errorData.email_or_phone_number\n                      ? styles['input-error-content']\n                      : null\n                  }`}\n                  placeholder={getEmailPhonePlaceholder(config)}\n                  type=\"text\"\n                  value={formData.email_or_phone_number || ''}\n                  onChange={e =>\n                    onInputChange('email_or_phone_number', e.target.value)\n                  }\n                />\n                {errorData.email_or_phone_number && (\n                  <div className={styles['form-input-error']}>\n                    {errorData.email_or_phone_number}\n                  </div>\n                )}\n              </div>\n              <div className={styles['styled-form-group']}>\n                <label\n                  className={styles['form-input-label']}\n                  htmlFor=\"authorizer-sign-up-password\"\n                >\n                  <span>* </span>Password\n                </label>\n                <input\n                  name=\"password\"\n                  id=\"authorizer-sign-up-password\"\n                  className={`${styles['form-input-field']} ${\n                    errorData.password ? styles['input-error-content'] : null\n                  }`}\n                  placeholder=\"********\"\n                  type=\"password\"\n                  value={formData.password || ''}\n                  onChange={e => onInputChange('password', e.target.value)}\n                />\n                {errorData.password && (\n                  <div className={styles['form-input-error']}>\n                    {errorData.password}\n                  </div>\n                )}\n              </div>\n              <div className={styles['styled-form-group']}>\n                <label\n                  className={styles['form-input-label']}\n                  htmlFor=\"authorizer-sign-up-confirm-password\"\n                >\n                  <span>* </span>Confirm Password\n                </label>\n                <input\n                  name=\"confirmPassword\"\n                  id=\"authorizer-sign-up-confirm-password\"\n                  className={`${styles['form-input-field']} ${\n                    errorData.confirmPassword\n                      ? styles['input-error-content']\n                      : null\n                  }`}\n                  placeholder=\"********\"\n                  type=\"password\"\n                  value={formData.confirmPassword || ''}\n                  onChange={e =>\n                    onInputChange('confirmPassword', e.target.value)\n                  }\n                />\n                {errorData.confirmPassword && (\n                  <div className={styles['form-input-error']}>\n                    {errorData.confirmPassword}\n                  </div>\n                )}\n              </div>\n              {config.is_strong_password_enabled && (\n                <>\n                  <PasswordStrengthIndicator\n                    value={formData.password || ''}\n                    setDisableButton={setDisableSignupButton}\n                  />\n                  <br />\n                </>\n              )}\n              <br />\n              <StyledButton\n                type=\"submit\"\n                disabled={\n                  loading ||\n                  disableSignupButton ||\n                  !!errorData.given_name ||\n                  !!errorData.family_name ||\n                  !!errorData.email_or_phone_number ||\n                  !!errorData.password ||\n                  !!errorData.confirmPassword ||\n                  !formData.given_name ||\n                  !formData.family_name ||\n                  !formData.email_or_phone_number ||\n                  !formData.password ||\n                  !formData.confirmPassword\n                }\n                appearance={ButtonAppearance.Primary}\n              >\n                {loading ? `Processing ...` : `Sign Up`}\n              </StyledButton>\n            </form>\n            {setView && (\n              <StyledFooter>\n                <div>\n                  Already have an account?{' '}\n                  <StyledLink onClick={() => setView(Views.Login)}>\n                    Log In\n                  </StyledLink>\n                </div>\n              </StyledFooter>\n            )}\n          </>\n        )}\n    </>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { StyledButton, StyledFlex, StyledSeparator } from '../styledComponents';\nimport { ButtonAppearance, Views } from '../constants';\nimport { AuthorizerVerifyOtp } from './AuthorizerVerifyOtp';\n\nexport const AuthorizerTOTPScanner: FC<{\n  setView?: (v: Views) => void;\n  onLogin?: (data: any) => void;\n  email?: string;\n  phone_number?: string;\n  urlProps?: Record<string, any>;\n  authenticator_scanner_image: string;\n  authenticator_secret: string;\n  authenticator_recovery_codes: string[];\n}> = ({\n  setView,\n  onLogin,\n  email,\n  phone_number,\n  authenticator_scanner_image,\n  authenticator_secret,\n  authenticator_recovery_codes,\n  urlProps,\n}) => {\n  const [isOTPScreenVisisble, setIsOTPScreenVisisble] =\n    useState<boolean>(false);\n\n  const handleContinue = () => {\n    setIsOTPScreenVisisble(true);\n  };\n\n  if (isOTPScreenVisisble) {\n    return (\n      <AuthorizerVerifyOtp\n        {...{\n          setView,\n          onLogin,\n          email,\n          phone_number,\n          urlProps,\n        }}\n        is_totp\n      />\n    );\n  }\n\n  return (\n    <>\n      <p style={{ margin: '10px 0px', fontWeight: 'bold' }}>\n        Scan the QR code or enter the secret key into your authenticator app.\n      </p>\n      <StyledFlex justifyContent=\"center\">\n        <img\n          src={`data:image/jpeg;base64,${authenticator_scanner_image}`}\n          alt=\"scanner\"\n        />\n      </StyledFlex>\n      <p style={{ margin: '10px 0px' }}>\n        If you are unable to scan the QR code, please enter the secret key\n        manually.\n      </p>\n      <p style={{ margin: '10px 0px', fontWeight: 'bold' }}>\n        {authenticator_secret}\n      </p>\n      <StyledSeparator />\n      <p style={{ margin: '10px 0px' }}>\n        If you lose access to your authenticator app, you can use the recovery\n        codes below to regain access to your account. Please save these codes\n        safely and do not share them with anyone.\n      </p>\n      <ul>\n        {authenticator_recovery_codes.map((code, index) => {\n          return <li key={index}>{code}</li>;\n        })}\n      </ul>\n      <StyledButton\n        type=\"button\"\n        appearance={ButtonAppearance.Primary}\n        onClick={handleContinue}\n      >\n        Continue\n      </StyledButton>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { AuthToken, LoginInput } from '@authorizerdev/authorizer-js';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\n\nimport styles from '../styles/default.css';\nimport { ButtonAppearance, MessageType, Views } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton, StyledFooter, StyledLink } from '../styledComponents';\nimport { Message } from './Message';\nimport { AuthorizerVerifyOtp } from './AuthorizerVerifyOtp';\nimport { OtpDataType, TotpDataType } from '../types';\nimport { AuthorizerTOTPScanner } from './AuthorizerTOTPScanner';\nimport { getEmailPhoneLabels, getEmailPhonePlaceholder } from '../utils/labels';\n\nconst initOtpData: OtpDataType = {\n  is_screen_visible: false,\n  email: '',\n  phone_number: '',\n};\n\nconst initTotpData: TotpDataType = {\n  is_screen_visible: false,\n  email: '',\n  phone_number: '',\n  authenticator_scanner_image: '',\n  authenticator_secret: '',\n  authenticator_recovery_codes: [],\n};\n\ninterface InputDataType {\n  email_or_phone_number: string | null;\n  password: string | null;\n}\n\nexport const AuthorizerBasicAuthLogin: FC<{\n  setView?: (v: Views) => void;\n  onLogin?: (data: AuthToken | void) => void;\n  urlProps?: Record<string, any>;\n  roles?: string[];\n}> = ({ setView, onLogin, urlProps, roles }) => {\n  const [error, setError] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const [otpData, setOtpData] = useState<OtpDataType>({ ...initOtpData });\n  const [totpData, setTotpData] = useState<TotpDataType>({ ...initTotpData });\n  const [formData, setFormData] = useState<InputDataType>({\n    email_or_phone_number: null,\n    password: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    email_or_phone_number: null,\n    password: null,\n  });\n  const { setAuthData, config, authorizerRef } = useAuthorizer();\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      let email: string = '';\n      let phone_number: string = '';\n      if (formData.email_or_phone_number) {\n        if (isEmail(formData.email_or_phone_number)) {\n          email = formData.email_or_phone_number;\n        } else if (isMobilePhone(formData.email_or_phone_number)) {\n          phone_number = formData.email_or_phone_number;\n        }\n      }\n      if (!email && !phone_number) {\n        setErrorData({\n          ...errorData,\n          email_or_phone_number: 'Invalid email or phone number',\n        });\n        setLoading(false);\n        return;\n      }\n      const data: LoginInput = {\n        email: email,\n        phone_number: phone_number,\n        password: formData.password || '',\n      };\n      if (urlProps?.scope) {\n        data.scope = urlProps.scope;\n      }\n      if (urlProps?.state) {\n        data.state = urlProps.state;\n      }\n\n      if (roles && roles.length) {\n        data.roles = roles;\n      }\n\n      const { data: res, errors } = await authorizerRef.login(data);\n      if (errors && errors.length) {\n        setError(errors[0].message);\n        setLoading(false);\n        return;\n      }\n      // if totp is enabled for the first time show totp screen with scanner\n      if (\n        res &&\n        res.should_show_totp_screen &&\n        res.authenticator_scanner_image &&\n        res.authenticator_secret &&\n        res.authenticator_recovery_codes\n      ) {\n        setTotpData({\n          is_screen_visible: true,\n          email: data.email || ``,\n          phone_number: data.phone_number || ``,\n          authenticator_scanner_image: res.authenticator_scanner_image,\n          authenticator_secret: res.authenticator_secret,\n          authenticator_recovery_codes: res.authenticator_recovery_codes,\n        });\n        return;\n      }\n      if (\n        res &&\n        (res?.should_show_email_otp_screen ||\n          res?.should_show_mobile_otp_screen ||\n          res?.should_show_totp_screen)\n      ) {\n        setOtpData({\n          is_screen_visible: true,\n          email: data.email || ``,\n          phone_number: data.phone_number || ``,\n          is_totp: res?.should_show_totp_screen || false,\n        });\n        return;\n      }\n\n      if (res) {\n        setError(``);\n        setAuthData({\n          user: res.user || null,\n          token: {\n            access_token: res.access_token,\n            expires_in: res.expires_in,\n            refresh_token: res.refresh_token,\n            id_token: res.id_token,\n          },\n          config,\n          loading: false,\n        });\n      }\n\n      if (onLogin) {\n        onLogin(res);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError((err as Error).message);\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  useEffect(() => {\n    if (formData.email_or_phone_number === '') {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Email OR Phone Number is required',\n      });\n    } else if (\n      !isEmail(formData.email_or_phone_number || '') &&\n      !isMobilePhone(formData.email_or_phone_number || '')\n    ) {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Invalid Email OR Phone Number',\n      });\n    } else {\n      setErrorData({ ...errorData, email_or_phone_number: null });\n    }\n  }, [formData.email_or_phone_number]);\n\n  useEffect(() => {\n    if (formData.password === '') {\n      setErrorData({ ...errorData, password: 'Password is required' });\n    } else {\n      setErrorData({ ...errorData, password: null });\n    }\n  }, [formData.password]);\n\n  if (totpData.is_screen_visible) {\n    return (\n      <AuthorizerTOTPScanner\n        {...{\n          setView,\n          onLogin,\n          email: totpData.email || ``,\n          phone_number: totpData.phone_number || ``,\n          authenticator_scanner_image: totpData.authenticator_scanner_image,\n          authenticator_secret: totpData.authenticator_secret,\n          authenticator_recovery_codes:\n            totpData.authenticator_recovery_codes || [],\n        }}\n        urlProps={urlProps}\n      />\n    );\n  }\n\n  if (otpData.is_screen_visible) {\n    return (\n      <AuthorizerVerifyOtp\n        {...{\n          setView,\n          onLogin,\n          email: otpData.email || ``,\n          phone_number: otpData.phone_number || ``,\n          is_totp: otpData.is_totp || false,\n        }}\n        urlProps={urlProps}\n      />\n    );\n  }\n\n  return (\n    <>\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      <>\n        <form onSubmit={onSubmit} name=\"authorizer-login-form\">\n          <div className={styles['styled-form-group']}>\n            <label\n              className={styles['form-input-label']}\n              htmlFor=\"authorizer-login-email\"\n            >\n              <span>* </span>\n              {getEmailPhoneLabels(config)}\n            </label>\n            <input\n              name=\"email_or_phone_number\"\n              id=\"authorizer-login-email-or-phone-number\"\n              className={`${styles['form-input-field']} ${\n                errorData.email_or_phone_number\n                  ? styles['input-error-content']\n                  : null\n              }`}\n              placeholder={getEmailPhonePlaceholder(config)}\n              type=\"text\"\n              value={formData.email_or_phone_number || ''}\n              onChange={e =>\n                onInputChange('email_or_phone_number', e.target.value)\n              }\n            />\n            {errorData.email_or_phone_number && (\n              <div className={styles['form-input-error']}>\n                {errorData.email_or_phone_number}\n              </div>\n            )}\n          </div>\n          <div className={styles['styled-form-group']}>\n            <label\n              className={styles['form-input-label']}\n              htmlFor=\"authorizer-login-password\"\n            >\n              <span>* </span>Password\n            </label>\n            <input\n              name=\"password\"\n              id=\"authorizer-login-password\"\n              className={`${styles['form-input-field']} ${\n                errorData.password ? styles['input-error-content'] : null\n              }`}\n              placeholder=\"********\"\n              type=\"password\"\n              value={formData.password || ''}\n              onChange={e => onInputChange('password', e.target.value)}\n            />\n            {errorData.password && (\n              <div className={styles['form-input-error']}>\n                {errorData.password}\n              </div>\n            )}\n          </div>\n          <br />\n          <StyledButton\n            type=\"submit\"\n            disabled={\n              !!errorData.email_or_phone_number ||\n              !!errorData.password ||\n              !formData.email_or_phone_number ||\n              !formData.password ||\n              loading\n            }\n            appearance={ButtonAppearance.Primary}\n          >\n            {loading ? `Processing ...` : `Log In`}\n          </StyledButton>\n        </form>\n\n        {setView && (\n          <StyledFooter>\n            <StyledLink\n              onClick={() => setView(Views.ForgotPassword)}\n              marginBottom=\"10px\"\n            >\n              Forgot Password?\n            </StyledLink>\n\n            {config.is_sign_up_enabled && (\n              <div>\n                Don't have an account?{' '}\n                <StyledLink onClick={() => setView(Views.Signup)}>\n                  Sign Up\n                </StyledLink>\n              </div>\n            )}\n          </StyledFooter>\n        )}\n      </>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport isEmail from 'validator/es/lib/isEmail';\n\nimport styles from '../styles/default.css';\nimport { ButtonAppearance, MessageType } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton } from '../styledComponents';\nimport { formatErrorMessage } from '../utils/format';\nimport { Message } from './Message';\nimport { MagicLinkLoginInput } from '@authorizerdev/authorizer-js';\n\ninterface InputDataType {\n  email: string | null;\n}\n\nexport const AuthorizerMagicLinkLogin: FC<{\n  onMagicLinkLogin?: (data: any) => void;\n  urlProps?: Record<string, any>;\n  roles?: string[];\n}> = ({ onMagicLinkLogin, urlProps, roles }) => {\n  const [error, setError] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(``);\n  const [formData, setFormData] = useState<InputDataType>({\n    email: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    email: null,\n  });\n  const { authorizerRef } = useAuthorizer();\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n\n      const data: MagicLinkLoginInput = {\n        email: formData.email || '',\n        state: urlProps?.state || '',\n        redirect_uri: urlProps?.redirect_uri || '',\n      };\n\n      if (roles && roles.length) {\n        data.roles = roles;\n      }\n      const { data: res, errors } = await authorizerRef.magicLinkLogin(data);\n      setLoading(false);\n      if (errors && errors.length) {\n        setError(formatErrorMessage(errors[0]?.message));\n        return;\n      }\n\n      if (res) {\n        setError(``);\n        setSuccessMessage(res.message || ``);\n\n        if (onMagicLinkLogin) {\n          onMagicLinkLogin(res);\n        }\n      }\n\n      if (urlProps?.redirect_uri) {\n        setTimeout(() => {\n          window.location.replace(urlProps.redirect_uri);\n        }, 3000);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(formatErrorMessage((err as Error)?.message));\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  useEffect(() => {\n    if (formData.email === '') {\n      setErrorData({ ...errorData, email: 'Email is required' });\n    } else if (formData.email && !isEmail(formData.email)) {\n      setErrorData({ ...errorData, email: 'Please enter valid email' });\n    } else {\n      setErrorData({ ...errorData, email: null });\n    }\n  }, [formData.email]);\n\n  if (successMessage) {\n    return <Message type={MessageType.Success} text={successMessage} />;\n  }\n\n  return (\n    <>\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      <form onSubmit={onSubmit} name=\"authorizer-magic-login-form\">\n        <div className={styles['styled-form-group']}>\n          <label\n            className={styles['form-input-label']}\n            htmlFor=\"authorizer-magic-link-login-email\"\n          >\n            <span>* </span>Email\n          </label>\n          <input\n            name=\"email\"\n            id=\"authorizer-magic-link-login-email\"\n            className={`${styles['form-input-field']} ${\n              errorData.email ? styles['input-error-content'] : null\n            }`}\n            placeholder=\"eg. foo@bar.com\"\n            type=\"email\"\n            value={formData.email || ''}\n            onChange={(e) => onInputChange('email', e.target.value)}\n          />\n          {errorData.email && (\n            <div className={styles['form-input-error']}>{errorData.email}</div>\n          )}\n        </div>\n        <br />\n        <StyledButton\n          type=\"submit\"\n          disabled={loading || !!errorData.email || !formData.email}\n          appearance={ButtonAppearance.Primary}\n        >\n          {loading ? `Processing ...` : `Send Email`}\n        </StyledButton>\n      </form>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport styles from '../styles/default.css';\n\nimport { ButtonAppearance, MessageType } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton, StyledWrapper } from '../styledComponents';\nimport { formatErrorMessage } from '../utils/format';\nimport { Message } from './Message';\nimport { getSearchParams } from '../utils/url';\nimport PasswordStrengthIndicator from './PasswordStrengthIndicator';\n\ntype Props = {\n  showOTPInput?: boolean;\n  onReset?: (res: any) => void;\n  phone_number?: string;\n};\n\ninterface InputDataType {\n  otp: string | null;\n  password: string | null;\n  confirmPassword: string | null;\n}\n\nexport const AuthorizerResetPassword: FC<Props> = ({\n  onReset,\n  showOTPInput,\n  phone_number,\n}) => {\n  const { token, redirect_uri } = getSearchParams();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState<InputDataType>({\n    otp: null,\n    password: null,\n    confirmPassword: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    otp: null,\n    password: null,\n    confirmPassword: null,\n  });\n  const { authorizerRef, config } = useAuthorizer();\n  const [disableContinueButton, setDisableContinueButton] = useState(false);\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const { data: res, errors } = await authorizerRef.resetPassword({\n        token,\n        otp: formData.otp || '',\n        phone_number: phone_number || '',\n        password: formData.password || '',\n        confirm_password: formData.confirmPassword || '',\n      });\n      setLoading(false);\n      if (errors && errors.length) {\n        setError(formatErrorMessage(errors[0]?.message));\n        return;\n      }\n      setError(``);\n      if (onReset) {\n        onReset(res);\n      } else {\n        window.location.href =\n          redirect_uri || config.redirectURL || window.location.origin;\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(formatErrorMessage((err as Error).message));\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  useEffect(() => {\n    if (formData.password === '') {\n      setErrorData({ ...errorData, password: 'Password is required' });\n    } else {\n      setErrorData({ ...errorData, password: null });\n    }\n  }, [formData.password]);\n\n  useEffect(() => {\n    if (formData.confirmPassword === '') {\n      setErrorData({\n        ...errorData,\n        confirmPassword: 'Confirm password is required',\n      });\n    } else {\n      setErrorData({ ...errorData, confirmPassword: null });\n    }\n  }, [formData.confirmPassword]);\n\n  useEffect(() => {\n    if (formData.password && formData.confirmPassword) {\n      if (formData.confirmPassword !== formData.password) {\n        setErrorData({\n          ...errorData,\n          password: `Password and confirm passwords don't match`,\n          confirmPassword: `Password and confirm passwords don't match`,\n        });\n      } else {\n        setErrorData({\n          ...errorData,\n          password: null,\n          confirmPassword: null,\n        });\n      }\n    }\n  }, [formData.password, formData.confirmPassword]);\n\n  return (\n    <StyledWrapper>\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      <form onSubmit={onSubmit} name=\"authorizer-reset-password-form\">\n        {showOTPInput && (\n          <div className={styles['styled-form-group']}>\n            <label\n              className={styles['form-input-label']}\n              htmlFor=\"authorizer-verify-otp\"\n            >\n              <span>* </span>OTP (One Time Password)\n            </label>\n            <input\n              name=\"otp\"\n              id=\"authorizer-verify-otp\"\n              className={`${styles['form-input-field']} ${\n                errorData.otp ? styles['input-error-content'] : null\n              }`}\n              placeholder=\"e.g.- AB123C\"\n              type=\"password\"\n              value={formData.otp || ''}\n              onChange={(e) => onInputChange('otp', e.target.value)}\n            />\n            {errorData.otp && (\n              <div className={styles['form-input-error']}>{errorData.otp}</div>\n            )}\n          </div>\n        )}\n        <div className={styles['styled-form-group']}>\n          <label\n            className={styles['form-input-label']}\n            htmlFor=\"authorizer-reset-password\"\n          >\n            <span>* </span>Password\n          </label>\n          <input\n            name=\"password\"\n            id=\"authorizer-reset-password\"\n            className={`${styles['form-input-field']} ${\n              errorData.password ? styles['input-error-content'] : null\n            }`}\n            placeholder=\"********\"\n            type=\"password\"\n            value={formData.password || ''}\n            onChange={(e) => onInputChange('password', e.target.value)}\n          />\n          {errorData.password && (\n            <div className={styles['form-input-error']}>\n              {errorData.password}\n            </div>\n          )}\n        </div>\n        <div className={styles['styled-form-group']}>\n          <label\n            className={styles['form-input-label']}\n            htmlFor=\"authorizer-reset-confirm-password\"\n          >\n            <span>* </span>Confirm Password\n          </label>\n          <input\n            name=\"confirmPassword\"\n            id=\"authorizer-reset-confirm-password\"\n            className={`${styles['form-input-field']} ${\n              errorData.confirmPassword ? styles['input-error-content'] : null\n            }`}\n            placeholder=\"********\"\n            type=\"password\"\n            value={formData.confirmPassword || ''}\n            onChange={(e) => onInputChange('confirmPassword', e.target.value)}\n          />\n          {errorData.confirmPassword && (\n            <div className={styles['form-input-error']}>\n              {errorData.confirmPassword}\n            </div>\n          )}\n        </div>\n        {config.is_strong_password_enabled && (\n          <>\n            <PasswordStrengthIndicator\n              value={formData.password || ''}\n              setDisableButton={setDisableContinueButton}\n            />\n            <br />\n          </>\n        )}\n        <StyledButton\n          type=\"submit\"\n          disabled={\n            loading ||\n            disableContinueButton ||\n            !!errorData.password ||\n            !!errorData.confirmPassword ||\n            !formData.password ||\n            !formData.confirmPassword\n          }\n          appearance={ButtonAppearance.Primary}\n        >\n          {loading ? `Processing ...` : `Continue`}\n        </StyledButton>\n      </form>\n    </StyledWrapper>\n  );\n};\n","import { hasWindow } from './window';\n\nexport const getSearchParams = (search = ''): Record<string, string> => {\n  let searchPrams = search;\n  if (!searchPrams && hasWindow()) {\n    searchPrams = window.location.search;\n  }\n  const urlSearchParams = new URLSearchParams(`${searchPrams}`);\n  // @ts-ignore\n  const params = Object.fromEntries(urlSearchParams.entries());\n  return params;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport isEmail from 'validator/es/lib/isEmail';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\n\nimport styles from '../styles/default.css';\nimport { ButtonAppearance, MessageType, Views } from '../constants';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledButton, StyledFooter, StyledLink } from '../styledComponents';\nimport { formatErrorMessage } from '../utils/format';\nimport { Message } from './Message';\nimport { OtpDataType } from '../types';\nimport { AuthorizerResetPassword } from './AuthorizerResetPassword';\nimport { getEmailPhoneLabels, getEmailPhonePlaceholder } from '../utils/labels';\n\ninterface InputDataType {\n  email_or_phone_number: string | null;\n}\n\nconst initOtpData: OtpDataType = {\n  is_screen_visible: false,\n  email: '',\n  phone_number: '',\n};\n\nexport const AuthorizerForgotPassword: FC<{\n  setView?: (v: Views) => void;\n  onForgotPassword?: (data: any) => void;\n  onPasswordReset?: () => void;\n  urlProps?: Record<string, any>;\n}> = ({ setView, onForgotPassword, onPasswordReset, urlProps }) => {\n  const [error, setError] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(``);\n  const [otpData, setOtpData] = useState<OtpDataType>({ ...initOtpData });\n  const [formData, setFormData] = useState<InputDataType>({\n    email_or_phone_number: null,\n  });\n  const [errorData, setErrorData] = useState<InputDataType>({\n    email_or_phone_number: null,\n  });\n  const { authorizerRef, config } = useAuthorizer();\n\n  const onInputChange = async (field: string, value: string) => {\n    setFormData({ ...formData, [field]: value });\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      let email: string = '';\n      let phone_number: string = '';\n      if (formData.email_or_phone_number) {\n        if (isEmail(formData.email_or_phone_number)) {\n          email = formData.email_or_phone_number;\n        } else if (isMobilePhone(formData.email_or_phone_number)) {\n          phone_number = formData.email_or_phone_number;\n        }\n      }\n      if (!email && !phone_number) {\n        setErrorData({\n          ...errorData,\n          email_or_phone_number: 'Invalid email or phone number',\n        });\n        setLoading(false);\n        return;\n      }\n      const { data: res, errors } = await authorizerRef.forgotPassword({\n        email: email,\n        phone_number: phone_number,\n        state: urlProps?.state || '',\n        redirect_uri:\n          urlProps?.redirect_uri ||\n          config.redirectURL ||\n          window.location.origin,\n      });\n      setLoading(false);\n      if (errors && errors.length) {\n        setError(formatErrorMessage(errors[0]?.message));\n        return;\n      }\n      if (res?.message) {\n        setError(``);\n        setSuccessMessage(res.message);\n        if (res?.should_show_mobile_otp_screen) {\n          setOtpData({\n            ...otpData,\n            is_screen_visible: true,\n            email: email,\n            phone_number: phone_number,\n          });\n          return;\n        }\n      }\n      if (onForgotPassword) {\n        onForgotPassword(res);\n      }\n    } catch (err) {\n      setLoading(false);\n      setError(formatErrorMessage((err as Error)?.message));\n    }\n  };\n\n  const onErrorClose = () => {\n    setError(``);\n  };\n\n  useEffect(() => {\n    if (formData.email_or_phone_number === '') {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Email OR Phone Number is required',\n      });\n    } else if (\n      formData.email_or_phone_number !== null &&\n      !isEmail(formData.email_or_phone_number || '') &&\n      !isMobilePhone(formData.email_or_phone_number || '')\n    ) {\n      setErrorData({\n        ...errorData,\n        email_or_phone_number: 'Invalid Email OR Phone Number',\n      });\n    } else {\n      setErrorData({ ...errorData, email_or_phone_number: null });\n    }\n  }, [formData.email_or_phone_number]);\n\n  if (successMessage) {\n    return (\n      <>\n        <Message type={MessageType.Success} text={successMessage} />\n        {otpData.is_screen_visible && (\n          <AuthorizerResetPassword\n            showOTPInput\n            onReset={onPasswordReset}\n            phone_number={otpData.phone_number}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {error && (\n        <Message type={MessageType.Error} text={error} onClose={onErrorClose} />\n      )}\n      <p style={{ textAlign: 'center', margin: '10px 0px' }}>\n        Please enter your {getEmailPhoneLabels(config)}.\n        <br /> We will send you an email / otp to reset your password.\n      </p>\n      <br />\n      <form onSubmit={onSubmit} name=\"authorizer-forgot-password-form\">\n        <div className={styles['styled-form-group']}>\n          <label\n            className={styles['form-input-label']}\n            htmlFor=\"authorizer-forgot-password-email-or-phone-number\"\n          >\n            <span>* </span>\n            {getEmailPhoneLabels(config)}\n          </label>\n          <input\n            name=\"email_or_phone_number\"\n            id=\"authorizer-forgot-password-email-or-phone-number\"\n            className={`${styles['form-input-field']} ${\n              errorData.email_or_phone_number\n                ? styles['input-error-content']\n                : null\n            }`}\n            placeholder={getEmailPhonePlaceholder(config)}\n            type=\"text\"\n            value={formData.email_or_phone_number || ''}\n            onChange={e =>\n              onInputChange('email_or_phone_number', e.target.value)\n            }\n          />\n          {errorData.email_or_phone_number && (\n            <div className={styles['form-input-error']}>\n              {errorData.email_or_phone_number}\n            </div>\n          )}\n        </div>\n        <br />\n        <StyledButton\n          type=\"submit\"\n          disabled={\n            loading ||\n            !!errorData.email_or_phone_number ||\n            !formData.email_or_phone_number\n          }\n          appearance={ButtonAppearance.Primary}\n        >\n          {loading ? `Processing ...` : `Request Change`}\n        </StyledButton>\n      </form>\n      {setView && (\n        <StyledFooter>\n          <div>\n            Remember your password?{' '}\n            <StyledLink onClick={() => setView(Views.Login)}>Log In</StyledLink>\n          </div>\n        </StyledFooter>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Github = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 291.32 291.32\"\n        width=\"24px\"\n        height=\"24px\"\n      >\n        <path\n          d=\"M145.66 0C65.219 0 0 65.219 0 145.66c0 80.45 65.219 145.66 145.66 145.66s145.66-65.21 145.66-145.66C291.319 65.219 226.1 0 145.66 0zm40.802 256.625c-.838-11.398-1.775-25.518-1.83-31.235-.364-4.388-.838-15.549-11.434-22.677 42.068-3.523 62.087-26.774 63.526-57.499 1.202-17.497-5.754-32.883-18.107-45.3.628-13.282-.401-29.023-1.256-35.941-9.486-2.731-31.608 8.949-37.79 13.947-13.037-5.062-44.945-6.837-64.336 0-13.747-9.668-29.396-15.64-37.926-13.974-7.875 17.452-2.813 33.948-1.275 35.914-10.142 9.268-24.289 20.675-20.447 44.572 6.163 35.04 30.816 53.94 70.508 58.564-8.466 1.73-9.896 8.048-10.606 10.788-26.656 10.997-34.275-6.791-37.644-11.425-11.188-13.847-21.23-9.832-21.849-9.614-.601.218-1.056 1.092-.992 1.511.564 2.986 6.655 6.018 6.955 6.263 8.257 6.154 11.316 17.27 13.2 20.438 11.844 19.473 39.374 11.398 39.638 11.562.018 1.702-.191 16.032-.355 27.184C64.245 245.992 27.311 200.2 27.311 145.66c0-65.365 52.984-118.348 118.348-118.348S264.008 80.295 264.008 145.66c0 51.008-32.318 94.332-77.546 110.965z\"\n          fill=\"#2b414d\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Google = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\">\n        <g transform=\"matrix(1, 0, 0, 1, 27.009001, -39.238998)\">\n          <path\n            fill=\"#4285F4\"\n            d=\"M -3.264 51.509 C -3.264 50.719 -3.334 49.969 -3.454 49.239 L -14.754 49.239 L -14.754 53.749 L -8.284 53.749 C -8.574 55.229 -9.424 56.479 -10.684 57.329 L -10.684 60.329 L -6.824 60.329 C -4.564 58.239 -3.264 55.159 -3.264 51.509 Z\"\n          />\n          <path\n            fill=\"#34A853\"\n            d=\"M -14.754 63.239 C -11.514 63.239 -8.804 62.159 -6.824 60.329 L -10.684 57.329 C -11.764 58.049 -13.134 58.489 -14.754 58.489 C -17.884 58.489 -20.534 56.379 -21.484 53.529 L -25.464 53.529 L -25.464 56.619 C -23.494 60.539 -19.444 63.239 -14.754 63.239 Z\"\n          />\n          <path\n            fill=\"#FBBC05\"\n            d=\"M -21.484 53.529 C -21.734 52.809 -21.864 52.039 -21.864 51.239 C -21.864 50.439 -21.724 49.669 -21.484 48.949 L -21.484 45.859 L -25.464 45.859 C -26.284 47.479 -26.754 49.299 -26.754 51.239 C -26.754 53.179 -26.284 54.999 -25.464 56.619 L -21.484 53.529 Z\"\n          />\n          <path\n            fill=\"#EA4335\"\n            d=\"M -14.754 43.989 C -12.984 43.989 -11.404 44.599 -10.154 45.789 L -6.734 42.369 C -8.804 40.429 -11.514 39.239 -14.754 39.239 C -19.444 39.239 -23.494 41.939 -25.464 45.859 L -21.484 48.949 C -20.534 46.099 -17.884 43.989 -14.754 43.989 Z\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Facebook = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 50 50\"\n        width=\"24px\"\n        height=\"24px\"\n        fill=\"#1877f2\"\n      >\n        <path d=\"M41,4H9C6.24,4,4,6.24,4,9v32c0,2.76,2.24,5,5,5h32c2.76,0,5-2.24,5-5V9C46,6.24,43.76,4,41,4z M37,19h-2c-2.14,0-3,0.5-3,2 v3h5l-1,5h-4v15h-5V29h-4v-5h4v-3c0-4,2-7,6-7c2.9,0,4,1,4,1V19z\" />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LinkedIn = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '8px',\n        top: '7.5px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 48 48\"\n        width=\"32px\"\n        height=\"32px\"\n      >\n        <path\n          fill=\"#0288D1\"\n          d=\"M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z\"\n        />\n        <path\n          fill=\"#FFF\"\n          d=\"M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Apple = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '10px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 256 315\"\n        width=\"24px\"\n        height=\"24px\"\n      >\n        <path d=\"M213.803 167.03c.442 47.58 41.74 63.413 42.197 63.615-.35 1.116-6.599 22.563-21.757 44.716-13.104 19.153-26.705 38.235-48.13 38.63-21.05.388-27.82-12.483-51.888-12.483-24.061 0-31.582 12.088-51.51 12.871-20.68.783-36.428-20.71-49.64-39.793-27-39.033-47.633-110.3-19.928-158.406 13.763-23.89 38.36-39.017 65.056-39.405 20.307-.387 39.475 13.662 51.889 13.662 12.406 0 35.699-16.895 60.186-14.414 10.25.427 39.026 4.14 57.503 31.186-1.49.923-34.335 20.044-33.978 59.822M174.24 50.199c10.98-13.29 18.369-31.79 16.353-50.199-15.826.636-34.962 10.546-46.314 23.828-10.173 11.763-19.082 30.589-16.678 48.633 17.64 1.365 35.66-8.964 46.64-22.262\" />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Twitter = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 48 48\"\n        width=\"24px\"\n        height=\"24px\"\n      >\n        <path\n          fill=\"#03A9F4\"\n          d=\"M42,12.429c-1.323,0.586-2.746,0.977-4.247,1.162c1.526-0.906,2.7-2.351,3.251-4.058c-1.428,0.837-3.01,1.452-4.693,1.776C34.967,9.884,33.05,9,30.926,9c-4.08,0-7.387,3.278-7.387,7.32c0,0.572,0.067,1.129,0.193,1.67c-6.138-0.308-11.582-3.226-15.224-7.654c-0.64,1.082-1,2.349-1,3.686c0,2.541,1.301,4.778,3.285,6.096c-1.211-0.037-2.351-0.374-3.349-0.914c0,0.022,0,0.055,0,0.086c0,3.551,2.547,6.508,5.923,7.181c-0.617,0.169-1.269,0.263-1.941,0.263c-0.477,0-0.942-0.054-1.392-0.135c0.94,2.902,3.667,5.023,6.898,5.086c-2.528,1.96-5.712,3.134-9.174,3.134c-0.598,0-1.183-0.034-1.761-0.104C9.268,36.786,13.152,38,17.321,38c13.585,0,21.017-11.156,21.017-20.834c0-0.317-0.01-0.633-0.025-0.945C39.763,15.197,41.013,13.905,42,12.429\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Microsoft = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 48 48\"\n        width=\"24px\"\n        height=\"24px\"\n      >\n        <path fill=\"#ff5722\" d=\"M6 6H22V22H6z\" transform=\"rotate(-180 14 14)\" />\n        <path\n          fill=\"#4caf50\"\n          d=\"M26 6H42V22H26z\"\n          transform=\"rotate(-180 34 14)\"\n        />\n        <path\n          fill=\"#ffc107\"\n          d=\"M26 26H42V42H26z\"\n          transform=\"rotate(-180 34 34)\"\n        />\n        <path\n          fill=\"#03a9f4\"\n          d=\"M6 26H22V42H6z\"\n          transform=\"rotate(-180 14 34)\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Twitch = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        width=\"24\"\n        viewBox=\"0 0 512 512\"\n      >\n        <path d=\"M391.2 103.5H352.5v109.7h38.6zM285 103H246.4V212.8H285zM120.8 0 24.3 91.4V420.6H140.1V512l96.5-91.4h77.3L487.7 256V0zM449.1 237.8l-77.2 73.1H294.6l-67.6 64v-64H140.1V36.6H449.1z\" />\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Roblox = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '10px',\n        top: '12px',\n        display: 'flex',\n      }}\n    >\n      <img\n        src=\"https://authorizer.dev/_next/image?url=%2Fimages%2Froblox.png&w=24&q=24\"\n        alt=\"roblox_logo\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Github } from '../icons/github';\nimport { Google } from '../icons/google';\nimport { Facebook } from '../icons/facebook';\nimport { StyledButton, StyledSeparator } from '../styledComponents';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { ButtonAppearance } from '../constants';\nimport { createQueryParams } from '../utils/common';\nimport { LinkedIn } from '../icons/linkedin';\nimport { Apple } from '../icons/apple';\nimport { Twitter } from '../icons/twitter';\nimport { Microsoft } from '../icons/microsoft';\nimport { Twitch } from '../icons/twitch';\nimport { Roblox } from '../icons/roblox';\n\nexport const AuthorizerSocialLogin: React.FC<{\n  urlProps?: Record<string, any>;\n  roles?: string[];\n}> = ({ urlProps, roles }) => {\n  const { config } = useAuthorizer();\n  const hasSocialLogin =\n    config.is_google_login_enabled ||\n    config.is_github_login_enabled ||\n    config.is_facebook_login_enabled ||\n    config.is_linkedin_login_enabled ||\n    config.is_apple_login_enabled ||\n    config.is_twitter_login_enabled ||\n    config.is_microsoft_login_enabled ||\n    config.is_twitch_login_enabled ||\n    config.is_roblox_login_enabled;\n\n  const data: {\n    scope?: string;\n    roles?: string[];\n    redirect_uri?: string;\n    redirectURL?: string;\n  } = {\n    ...(urlProps || {}),\n    scope: urlProps?.scope.join(' '),\n  };\n\n  if (roles && roles.length) {\n    data.roles = roles;\n  }\n\n  if (!data.redirect_uri && !data.redirectURL) {\n    data.redirect_uri = config.redirectURL;\n  }\n\n  const queryParams = createQueryParams(data);\n\n  return (\n    <>\n      {config.is_apple_login_enabled && (\n        <div id=\"appleid-signin\">\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/apple?${queryParams}`;\n            }}\n          >\n            <Apple />\n            Continue with Apple\n          </StyledButton>\n          <br />\n        </div>\n      )}\n      {config.is_google_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/google?${queryParams}`;\n            }}\n          >\n            <Google />\n            Continue with Google\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_github_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/github?${queryParams}`;\n            }}\n          >\n            <Github />\n            Continue with Github\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_facebook_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/facebook?${queryParams}`;\n            }}\n          >\n            <Facebook />\n            Continue with Facebook\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_linkedin_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/linkedin?${queryParams}`;\n            }}\n          >\n            <LinkedIn />\n            Continue with LinkedIn\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_twitter_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/twitter?${queryParams}`;\n            }}\n          >\n            <Twitter />\n            Continue with Twitter\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_microsoft_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/microsoft?${queryParams}`;\n            }}\n          >\n            <Microsoft />\n            Continue with Microsoft\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_twitch_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/twitch?${queryParams}`;\n            }}\n          >\n            <Twitch />\n            Continue with Twitch\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {config.is_roblox_login_enabled && (\n        <>\n          <StyledButton\n            appearance={ButtonAppearance.Default}\n            onClick={() => {\n              window.location.href = `${config.authorizerURL}/oauth_login/roblox?${queryParams}`;\n            }}\n          >\n            <Roblox />\n            Continue with Roblox\n          </StyledButton>\n          <br />\n        </>\n      )}\n      {hasSocialLogin &&\n        (config.is_basic_authentication_enabled ||\n          config.is_mobile_basic_authentication_enabled ||\n          config.is_magic_link_login_enabled) && (\n          <StyledSeparator>OR</StyledSeparator>\n        )}\n    </>\n  );\n};\n","import { hasWindow } from './window';\n\nexport const getIntervalDiff = (accessTokenExpiresAt: number): number => {\n  const expiresAt = accessTokenExpiresAt * 1000 - 300000;\n  const currentDate = new Date();\n\n  const millisecond = new Date(expiresAt).getTime() - currentDate.getTime();\n  return millisecond;\n};\n\nexport const getCrypto = () => {\n  //ie 11.x uses msCrypto\n  return hasWindow()\n    ? ((window.crypto || (window as any).msCrypto) as Crypto)\n    : null;\n};\n\nexport const createRandomString = () => {\n  const charset =\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_~.';\n  let random = '';\n  const crypto = getCrypto();\n  if (crypto) {\n    const randomValues = Array.from(crypto.getRandomValues(new Uint8Array(43)));\n    randomValues.forEach((v) => (random += charset[v % charset.length]));\n  }\n  return random;\n};\n\nexport const createQueryParams = (params: any) => {\n  return Object.keys(params)\n    .filter((k) => typeof params[k] !== 'undefined')\n    .map((k) => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&');\n};\n","import React, { FC, useState } from 'react';\nimport { AuthToken } from '@authorizerdev/authorizer-js';\n\nimport { AuthorizerBasicAuthLogin } from './AuthorizerBasicAuthLogin';\nimport { useAuthorizer } from '../contexts/AuthorizerContext';\nimport { StyledWrapper } from '../styledComponents';\nimport { Views } from '../constants';\nimport { AuthorizerSignup } from './AuthorizerSignup';\nimport { AuthorizerForgotPassword } from './AuthorizerForgotPassword';\nimport { AuthorizerSocialLogin } from './AuthorizerSocialLogin';\nimport { AuthorizerMagicLinkLogin } from './AuthorizerMagicLinkLogin';\nimport { createRandomString } from '../utils/common';\nimport { hasWindow } from '../utils/window';\n\nexport const AuthorizerRoot: FC<{\n  onLogin?: (data: AuthToken | void) => void;\n  onSignup?: (data: AuthToken | void) => void;\n  onMagicLinkLogin?: (data: any) => void;\n  onForgotPassword?: (data: any) => void;\n  onPasswordReset?: () => void;\n  roles?: string[];\n}> = ({\n  onLogin,\n  onSignup,\n  onMagicLinkLogin,\n  onForgotPassword,\n  onPasswordReset,\n  roles,\n}) => {\n  const [view, setView] = useState(Views.Login);\n  const { config } = useAuthorizer();\n  const searchParams = new URLSearchParams(\n    hasWindow() ? window.location.search : ``\n  );\n  const state = searchParams.get('state') || createRandomString();\n  const scope = searchParams.get('scope')\n    ? searchParams\n        .get('scope')\n        ?.toString()\n        .split(' ')\n    : ['openid', 'profile', 'email'];\n\n  const urlProps: Record<string, any> = {\n    state,\n    scope,\n  };\n\n  const redirectURL =\n    searchParams.get('redirect_uri') || searchParams.get('redirectURL');\n  if (redirectURL) {\n    urlProps.redirectURL = redirectURL;\n  } else {\n    urlProps.redirectURL = hasWindow() ? window.location.origin : redirectURL;\n  }\n\n  urlProps.redirect_uri = urlProps.redirectURL;\n  return (\n    <StyledWrapper>\n      <AuthorizerSocialLogin urlProps={urlProps} roles={roles} />\n      {view === Views.Login &&\n        (config.is_basic_authentication_enabled ||\n          config.is_mobile_basic_authentication_enabled) &&\n        !config.is_magic_link_login_enabled && (\n          <AuthorizerBasicAuthLogin\n            setView={setView}\n            onLogin={onLogin}\n            urlProps={urlProps}\n            roles={roles}\n          />\n        )}\n\n      {view === Views.Signup &&\n        (config.is_basic_authentication_enabled ||\n          config.is_mobile_basic_authentication_enabled) &&\n        !config.is_magic_link_login_enabled &&\n        config.is_sign_up_enabled && (\n          <AuthorizerSignup\n            setView={setView}\n            onSignup={onSignup}\n            urlProps={urlProps}\n            roles={roles}\n          />\n        )}\n\n      {view === Views.Login && config.is_magic_link_login_enabled && (\n        <AuthorizerMagicLinkLogin\n          onMagicLinkLogin={onMagicLinkLogin}\n          urlProps={urlProps}\n          roles={roles}\n        />\n      )}\n\n      {view === Views.ForgotPassword && (\n        <AuthorizerForgotPassword\n          setView={setView}\n          onForgotPassword={onForgotPassword}\n          onPasswordReset={onPasswordReset}\n          urlProps={urlProps}\n        />\n      )}\n    </StyledWrapper>\n  );\n};\n"],"names":["Views","ButtonAppearance","MessageType","AuthorizerProviderActionType","passwordStrengthIndicatorOpacity","default","weak","good","strong","veryStrong","hasWindow","window","AuthorizerContext","createContext","config","authorizerURL","redirectURL","client_id","is_google_login_enabled","is_github_login_enabled","is_facebook_login_enabled","is_linkedin_login_enabled","is_apple_login_enabled","is_twitter_login_enabled","is_microsoft_login_enabled","is_twitch_login_enabled","is_roblox_login_enabled","is_email_verification_enabled","is_basic_authentication_enabled","is_magic_link_login_enabled","is_sign_up_enabled","is_strong_password_enabled","is_multi_factor_auth_enabled","is_mobile_basic_authentication_enabled","is_phone_verification_enabled","user","token","loading","setLoading","setToken","setUser","setAuthData","authorizerRef","Authorizer","location","origin","clientID","logout","_logout","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","reducer","state","action","type","SET_USER","_extends","payload","SET_TOKEN","SET_LOADING","SET_CONFIG","SET_AUTH_DATA","Error","initialState","useAuthorizer","useContext","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","StyledWrapper","_ref","React","className","children","StyledButton","_ref$appearance","appearance","Default","_ref$disabled","disabled","width","_ref$style","backgroundColor","Primary","color","border","onClick","StyledLink","marginBottom","_ref$marginBottom","StyledSeparator","StyledFooter","getBackgroundColor","Success","Info","StyledMessageWrapper","_ref$styles","styles","extraStyles","_ref$type","StyledFlex","flexDirection","_ref$alignItems","alignItems","_ref$justifyContent","justifyContent","_ref$wrap","_ref$width","_ref$flexDirection","flexWrap","StyledPasswordStrength","strength","opacity","_ref$strength","StyledPasswordStrengthWrapper","formatErrorMessage","message","replace","IconClose","xmlns","viewBox","height","fill","d","Message","data","text","onClose","trim","flex","charAt","toUpperCase","slice","cursor","validatePassword","value","res","score","hasSixChar","hasLowerCase","hasUpperCase","hasNumericChar","hasSpecialChar","maxThirtySixChar","length","Array","from","forEach","char","test","isValid","Object","values","every","i","Boolean","PasswordStrengthIndicator","setDisableButton","_React$useState","useState","_React$useState$","setValidations","useEffect","validationData","readOnly","checked","marginLeft","AuthorizerVerifyOtp","setView","onLogin","email","phone_number","urlProps","is_totp","_useState","error","setError","_useState2","successMessage","setSuccessMessage","_useState3","_useState4","sendingOtp","setSendingOtp","_useState5","otp","formData","setFormData","_useState6","errorData","setErrorData","_useAuthorizer","onInputChange","_ref2","field","_extends2","_x","_x2","onSubmit","_ref3","_callee2","e","_yield$authorizerRef$","errors","_errors$","_context2","preventDefault","verifyOtp","sent","abrupt","access_token","expires_in","refresh_token","id_token","t0","_x3","resendOtp","_ref4","_callee3","_yield$authorizerRef$2","_errors$2","_context3","textAlign","margin","name","htmlFor","id","placeholder","onChange","target","Signup","getEmailPhoneLabels","emailLabel","getEmailPhonePlaceholder","prefix","initOtpData","is_screen_visible","AuthorizerSignup","onSignup","roles","otpData","setOtpData","given_name","family_name","email_or_phone_number","password","confirmPassword","_useState7","disableSignupButton","setDisableSignupButton","isEmail","isMobilePhone","confirm_password","scope","redirect_uri","signup","should_show_email_otp_screen","should_show_mobile_otp_screen","Login","AuthorizerTOTPScanner","authenticator_scanner_image","authenticator_secret","authenticator_recovery_codes","setIsOTPScreenVisisble","fontWeight","src","alt","map","code","index","key","initTotpData","AuthorizerBasicAuthLogin","totpData","setTotpData","login","should_show_totp_screen","ForgotPassword","AuthorizerMagicLinkLogin","onMagicLinkLogin","magicLinkLogin","setTimeout","AuthorizerResetPassword","onReset","showOTPInput","_getSearchParams","search","searchPrams","urlSearchParams","URLSearchParams","fromEntries","entries","getSearchParams","disableContinueButton","setDisableContinueButton","resetPassword","href","AuthorizerForgotPassword","onForgotPassword","onPasswordReset","forgotPassword","Github","position","left","top","display","Google","transform","Facebook","LinkedIn","Apple","Twitter","Microsoft","Twitch","Roblox","AuthorizerSocialLogin","hasSocialLogin","join","params","queryParams","keys","filter","k","encodeURIComponent","charset","random","crypto","view","searchParams","get","msCrypto","getRandomValues","Uint8Array","v","_searchParams$get","toString","split","onStateChangeCallback","_useReducer","useReducer","dispatch","intervalRef","useRef","getToken","metaRes","metaResErrors","current","getMetaData","getSession","clearInterval","setInterval","Provider","_data$token"],"mappings":"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"}